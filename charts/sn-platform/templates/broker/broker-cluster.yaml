#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
# deploy PulsarBroker only when `components.broker and operator.enabled` is true
{{- if and .Values.components.broker .Values.broker.operator.enabled }}
apiVersion: pulsar.streamnative.io/v1alpha1
kind: PulsarBroker
metadata:
  # no need to add component to name here as operator will add 
  name: "{{ template "pulsar.fullname" . }}"
  namespace: {{ template "pulsar.namespace" . }}
  annotations:
    "cloud.streamnative.io/enable-config-prefix": "false"
  labels:
    {{- include "pulsar.standardLabels" . | nindent 4 }}
    component: {{ .Values.broker.component }}
{{- with .Values.broker.labels }}
{{ toYaml . | indent 4 }}
{{- end }}
spec:
  zkServers: "{{ template "pulsar.zookeeper.connect" . }}{{ .Values.metadataPrefix }}"
  replicas: {{ .Values.broker.replicaCount }}
  image: "{{ .Values.images.broker.repository }}:{{ .Values.images.broker.tag }}"
  imagePullPolicy: {{ .Values.images.broker.pullPolicy }}
  pod:
    serviceAccountName: {{ template "pulsar.broker.serviceAccount" . }}
    labels:
      {{- include "pulsar.template.labels" . | nindent 6 }}
      component: {{ .Values.broker.component }}
      {{- if and .Values.broker.kop.enabled .Values.broker.kop.tls.enabled }}
      sidecar.istio.io/inject: "true"
      {{- end }}
{{- with .Values.broker.labels }}
{{ toYaml . | indent 6 }}
{{- end }}
    annotations:
      {{- if .Values.monitoring.datadog }}
      {{- include "pulsar.broker.datadog.annotation" . | nindent 6 }}
      {{- end }}
      prometheus.io/scrape: "true"
      prometheus.io/port: "{{ .Values.broker.ports.http }}"
{{- with .Values.broker.annotations }}
{{ toYaml . | indent 6 }}
{{- end }}
    {{- if .Values.broker.readPublicKeyFromFile }}
    secretRefs:
    {{- if .Values.broker.publicKeyPath }}
    - mountPath: {{ .Values.broker.publicKeyPath }}
    {{- else }}
    - mountPath: /pulsar/vault/v1/identity/oidc/.well-known/keys
    {{- end }}
      {{- if .Values.broker.publicKeySecret }}
      secretName: {{ .Values.broker.publicKeySecret }}
      {{- else }}
      secretName: {{ template "pulsar.fullname" . }}-{{ .Values.vault.component }}-public-key
      {{- end }}
    {{- end }}
    {{- if and .Values.affinity.anti_affinity .Values.broker.affinity.anti_affinity }}
    affinity:
      podAntiAffinity:
        {{ .Values.broker.affinity.type }}:
          {{ if eq .Values.broker.affinity.type "requiredDuringSchedulingIgnoredDuringExecution" }}
          - labelSelector:
              matchExpressions:
                - key: "app"
                  operator: In
                  values:
                    - "{{ template "pulsar.name" . }}"
                - key: "release"
                  operator: In
                  values:
                    - {{ .Release.Name }}
                - key: "component"
                  operator: In
                  values:
                    - {{ .Values.broker.component }}
            topologyKey: "kubernetes.io/hostname"
          {{ else }}
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                      - "{{ template "pulsar.name" . }}"
                  - key: "release"
                    operator: In
                    values:
                      - {{ .Release.Name }}
                  - key: "component"
                    operator: In
                    values:
                      - {{ .Values.broker.component }}
              topologyKey: "kubernetes.io/hostname"
          {{ end }}
    {{- end }}
    vars:
    {{- if .Values.auth.authentication.enabled }}
    - name: PULSAR_PREFIX_OIDCTokenAudienceID
      valueFrom:
          secretKeyRef:
            name: {{ template "pulsar.vault-secret-key-name" . }}
            key: PULSAR_PREFIX_OIDCTokenAudienceID
    - name: brokerClientAuthenticationParameters
      valueFrom:
          secretKeyRef:
            name: {{ template "pulsar.vault-secret-key-name" . }}
            key: brokerClientAuthenticationParameters
    {{- end }}
    {{- if not ( and .Values.broker.kop.enabled .Values.broker.advertisedDomain ) }}
    - name: POD_NAME
      valueFrom:
          fieldRef:
            fieldPath: metadata.name
    - name: PULSAR_PREFIX_kafkaAdvertisedListeners
      value: PLAINTEXT://$(POD_NAME).{{ template "pulsar.fullname" . }}-{{ .Values.broker.component }}-headless.{{ template "pulsar.namespace" . }}.svc.cluster.local:9092,SSL://$(POD_NAME).{{ template "pulsar.fullname" . }}-{{ .Values.broker.component }}-headless.{{ template "pulsar.namespace" . }}.svc.cluster.local:9093
    {{- end }}
    # not support envFrom currently
    #envFrom:
    #- secretRef:
    #    name: {{ template "pulsar.vault-secret-key-name" . }}
    {{- if .Values.broker.resources }}
    resources:
{{ toYaml .Values.broker.resources | indent 6 }}
    {{- end }}
    {{- if .Values.broker.securityContext }}
    securityContext: {{ .Values.broker.securityContext }}
    {{- end }}
    {{- if .Values.broker.nodeSelector }}
    nodeSelector:
{{ toYaml .Values.broker.nodeSelector | indent 6 }}
    {{- end }}
    {{- if .Values.broker.tolerations }}
    tolerations:
{{ toYaml .Values.broker.tolerations | indent 6 }}
    {{- end }}
    terminationGracePeriodSeconds: {{ .Values.broker.gracePeriod }}
    jvmOptions:
      extraOptions: []
      memoryOptions:
        - {{ .Values.broker.configData.PULSAR_MEM }}
      gcOptions:
        - {{ .Values.broker.configData.PULSAR_GC }}
      gcLoggingOptions: []
  {{- if and .Values.broker.kop.enabled .Values.broker.kop.tls.enabled }}
  istio:
    enabled: true
    gateway:
      create: true
      selector:
        istio: {{ quote .Values.broker.istio.gateway.selector.istio }}
  {{- end }}
  {{- if .Values.broker.dnsNames }}
  dnsNames:
{{ toYaml .Values.broker.dnsNames | indent 2}}
  {{- end }}
  config:
    {{- if .Values.broker.functionmesh.enabled }}
    function:
      enabled: true
      mesh:
        builtinConnectorsRef:
          name: builtin-connectors
      type: FunctionMesh
    {{- end }}
    advertisedDomain: {{ quote .Values.broker.advertisedDomain }}
    {{- if or (or .Values.broker.kop.enabled .Values.components.kop) (or .Values.broker.aop.enabled .Values.components.aop) }}
    protocolHandlers:
    {{- if or .Values.broker.kop.enabled .Values.components.kop }}
      kop:
        enabled: true
        tls:
          enabled: {{ .Values.broker.kop.tls.enabled }}
    {{- if .Values.certs.public_issuer.enabled }}
          trustStoreEnabled: false
    {{- end }}
    {{- if .Values.broker.kop.tls.certSecretName }}
          certSecretName: {{ .Values.broker.kop.tls.certSecretName }}
    {{ else }}
          certSecretName: "{{ .Release.Name }}-{{ .Values.tls.proxy.cert_name }}"
    {{- end }}
    {{- if .Values.broker.kop.tls.passwordSecretRef }}
          passwordSecretRef:
            key: {{ .Values.broker.kop.tls.passwordSecretRef.key }}
            name: {{ .Values.broker.kop.tls.passwordSecretRef.name }}
    {{ else }}
          passwordSecretRef:
            name: cert-jks-passwd
            key: password
    {{- end }}
    {{- end }}
    {{- if or .Values.broker.aop.enabled .Values.components.aop }}
      aop:
        enabled: true
        {{- if .Values.broker.aop.proxyEnabled }}
        proxyEnabled: {{ .Values.broker.aop.proxyEnabled }}
        {{- end }}
    {{- end }}
    {{- end }}
    custom:
      PULSAR_PREFIX_additionalServlets: "license-plugin-servlet"
      PULSAR_PREFIX_additionalServletDirectory: "./brokerAdditionalServlet"
{{ toYaml .Values.broker.configData | indent 6 }}
      {{- if and (.Values.auth.vault.enabled) (.Values.auth.oauth.enabled) }}
      authenticationEnabled: "true"
      authenticateOriginalAuthData: "true"
      authenticationProviders: "io.streamnative.pulsar.broker.authentication.AuthenticationProviderOIDCToken,{{ .Values.auth.oauth.authenticationProvider }}"
      brokerClientAuthenticationPlugin: "org.apache.pulsar.client.impl.auth.AuthenticationToken"
      PULSAR_PREFIX_chainAuthenticationEnabled: "true"
      PULSAR_PREFIX_vaultHost: {{ template "pulsar.vault.url" . }}
      {{- if .Values.broker.readPublicKeyFromFile }}
      {{- if .Values.broker.publicKeyPath }}
      PULSAR_PREFIX_OIDCPublicKeyPath: "file://{{ .Values.broker.publicKeyPath }}/publicKey"
      {{- else }}
      PULSAR_PREFIX_OIDCPublicKeyPath: "file:///pulsar/vault/v1/identity/oidc/.well-known/keys/publicKey"
      {{- end }}
      {{- else }}
      PULSAR_PREFIX_OIDCPublicKeyPath: "{{ template "pulsar.vault.url" . }}/v1/identity/oidc/.well-known/keys"
      {{- end  }}
      PULSAR_PREFIX_oauthIssuerUrl: "{{ .Values.auth.oauth.oauthIssuerUrl }}"
      PULSAR_PREFIX_oauthAudience: "{{ .Values.auth.oauth.oauthAudience }}"
      PULSAR_PREFIX_oauthSubjectClaim: "{{ .Values.auth.oauth.oauthSubjectClaim }}"
      PULSAR_PREFIX_oauthAdminScope: "{{ .Values.auth.oauth.oauthAdminScope }}"
      PULSAR_PREFIX_oauthScopeClaim: "{{ .Values.auth.oauth.oauthScopeClaim }}"
      PULSAR_PREFIX_oauthAuthzRoleClaim: "{{ .Values.auth.oauth.oauthAuthzRoleClaim }}"
      PULSAR_PREFIX_oauthAuthzAdminRole: "{{ .Values.auth.oauth.oauthAuthzAdminRole }}"
      superUserRoles: "admin"
      {{- else if .Values.auth.authentication.enabled }}
      authenticationEnabled: "true"
      authenticateOriginalAuthData: "true"
      authenticationProviders: "io.streamnative.pulsar.broker.authentication.AuthenticationProviderOIDCToken"
      brokerClientAuthenticationPlugin: "org.apache.pulsar.client.impl.auth.AuthenticationToken"
      PULSAR_PREFIX_vaultHost: {{ template "pulsar.vault.url" . }}
      {{- if .Values.broker.readPublicKeyFromFile }}
      {{- if .Values.broker.publicKeyPath }}
      PULSAR_PREFIX_OIDCPublicKeyPath: "file://{{ .Values.broker.publicKeyPath }}/publicKey"
      {{- else }}
      PULSAR_PREFIX_OIDCPublicKeyPath: "file:///pulsar/vault/v1/identity/oidc/.well-known/keys/publicKey"
      {{- end }}
      {{- else }}
      PULSAR_PREFIX_OIDCPublicKeyPath: "{{ template "pulsar.vault.url" . }}/v1/identity/oidc/.well-known/keys"
      {{- end  }}
      superUserRoles: "admin"
      {{- end }}
      {{- if and (.Values.auth.authorization.enabled) (.Values.auth.oauth.enabled) }}
      authorizationEnabled: "true"
      authorizationProvider: "{{ .Values.auth.oauth.authorizationProvider }}"
      {{- else if .Values.auth.authorization.enabled }}
      authorizationEnabled: "true"
      authorizationProvider: "org.apache.pulsar.broker.authorization.PulsarAuthorizationProvider"
      {{- end }}
      {{- if and .Values.broker.kop.enabled .Values.kop.auth.enabled }}
      PULSAR_PREFIX_saslAllowedMechanisms: "PLAIN"
      {{- end }}
  {{- if .Values.zookeeper.customTools.restore.enable }}
  initJobPod:
    initContainers:
      - name: cleanup
        image: "{{ .Values.images.zookeeper.customTools.restore.repository }}:{{ .Values.images.zookeeper.customTools.restore.tag }}"
        command:
          - bash
          - '-c'
        args:
          - "bin/pulsar-metadata-tool cleanup"
        env:
          - name: METADATA_TOOL_CONF
            value: "/pulsar-metadata-tool/conf/pulsar-metadata-tool/pulsar-metadata-tool.properties"
        volumeMounts:
          - name: cleanup-config
            mountPath: /pulsar-metadata-tool/conf/pulsar-metadata-tool
    volumes:
      - name: cleanup-config
        configMap:
          name: "{{ template "pulsar.fullname" . }}-{{ .Values.zookeeper.customTools.restore.component }}"
  {{- end }}
  {{- if and .Values.components.autoscaling .Values.broker.autoscaling.maxReplicas }}
  autoScalingPolicy:
    maxReplicas: {{ .Values.broker.autoscaling.maxReplicas }}
    {{- if .Values.broker.autoscaling.minReplicas }}
    minReplicas: {{ .Values.broker.autoscaling.minReplicas }}
    {{- end }}
    {{- if .Values.broker.autoscaling.metrics }}
    metrics:
{{- with .Values.broker.autoscaling.metrics }}
{{ toYaml . | indent 6 }}
{{- end }}
    {{- end }}
    {{- if .Values.broker.autoscaling.behavior }}
    behavior:
{{- with .Values.broker.autoscaling.behavior }}
{{ toYaml . | indent 6 }}
{{- end }}
    {{- end }}
  {{- end }}
{{- end }}
