#
# Copyright (c) 2019 - 2024 StreamNative, Inc.. All Rights Reserved.
#
# deploy PulsarProxy only when `components.proxy and operator.enabled` is true
{{- if .Values.components.proxy }}
apiVersion: pulsar.streamnative.io/v1alpha1
kind: PulsarProxy
metadata:
  # no need to append component name to pod name here as operator will add
  name: "{{ template "pulsar.fullname" . }}"
  namespace: {{ template "pulsar.namespace" . }}
  annotations:
    "cloud.streamnative.io/enable-config-prefix": "false"
    {{- with .Values.proxy.pulsarProxy.annotations -}}
    {{ toYaml . | nindent 4 }}
    {{- end }}
  labels:
    {{- include "pulsar.standardLabels" . | nindent 4 }}
    component: {{ .Values.proxy.component }}
{{- with .Values.proxy.labels }}
{{ toYaml . | indent 4 }}
{{- end }}
{{- with .Values.proxy.pulsarProxy.labels -}}
{{ toYaml . | nindent 4 }}
{{- end }}
{{- if .Values.components.pulsar_coordinator }}
    k8s.streamnative.io/coordinator-name: "{{ template "pulsar.fullname" . }}-coordinator"
{{- end }}
spec:
  brokerAddress: {{ template "pulsar.proxy.broker.service.address" . }}
  replicas: {{ .Values.proxy.replicaCount }}
  {{- if not .Values.components.pulsar_coordinator }}
  image: "{{ .Values.images.proxy.repository }}:{{ .Values.images.proxy.tag }}"
  {{- end }}
  imagePullPolicy: {{ .Values.images.proxy.pullPolicy }}
  logConfig:
    level: {{ .Values.proxy.logConfig.level }}
    format: {{ .Values.proxy.logConfig.format }}
    {{- with .Values.proxy.logConfig.template }}
    template: |
    {{- toYaml . | nindent 6 -}}
    {{- end }}
  pod:
    {{- with .Values.proxy.topologySpreadConstraints }}
    topologySpreadConstraints:
    {{- toYaml . | nindent 4 }}
    {{- end }}
    {{- if .Values.proxy.serviceAccount.use }}
    serviceAccountName: {{ include "pulsar.proxy.serviceAccount" . }}
    {{- end }}
    labels:
      {{- include "pulsar.template.labels" . | nindent 6 }}
      component: {{ .Values.proxy.component }}
{{- with .Values.proxy.labels }}
{{ toYaml . | indent 6 }}
{{- end }}
{{- if or (and .Values.prometheus.scrape.proxy .Values.prometheus.scrape.enabled) .Values.monitoring.datadog .Values.proxy.annotations }}
    annotations:
      {{- if .Values.monitoring.datadog }}
      {{- include "pulsar.proxy.datadog.annotation" . | nindent 6 }}
      {{- end }}
{{- if (and .Values.prometheus.scrape.proxy .Values.prometheus.scrape.enabled) }}
      prometheus.io/scrape: "true"
      prometheus.io/port: "{{ .Values.proxy.ports.http }}"
{{- end }}
{{- with .Values.proxy.annotations }}
{{ toYaml . | indent 6 }}
{{- end }}
{{- end }}
{{- if or (and .Values.auth.vault.enabled .Values.proxy.readPublicKeyFromFile) .Values.proxy.extraSecretRefs  .Values.auth.oauth.enabled .Values.auth.authentication.jwt.enabled }}
    secretRefs:
{{- with .Values.proxy.extraSecretRefs }}
{{ toYaml . | indent 4 }}
{{- end }}
    {{- if or .Values.auth.oauth.enabled .Values.auth.authentication.jwt.enabled .Values.auth.vault.enabled }}
{{- include "pulsar.authSecret" . | indent 4 }}
    {{- end }}
{{- end }}
    {{- if .Values.tls.proxy.enabled }}
    volumes:
    {{- include "pulsar.proxy.certs.volumes" . | nindent 4 }}
    {{- end }}
    affinity:
      {{- include "pulsar.antiAffinityRules" (dict "Values" .Values "thisAffinity" .Values.proxy.affinity "Component" .Values.proxy.component "Release" .Release "Chart" .Chart) | indent 6 }}
    {{- if .Values.auth.authentication.enabled }}
    vars:
{{- include "pulsar.authEnvironment" (dict "Values" .Values "Component" .Values.proxy.component "Release" .Release "Chart" .Chart) | indent 4 }}
    {{- end }}
{{- with .Values.proxy.extraEnv}}
{{ toYaml . | indent 4 }}
{{- end }}
    {{- if .Values.proxy.resources }}
    resources:
{{ toYaml .Values.proxy.resources | indent 6 }}
    {{- end }}
    {{- with .Values.proxy.securityContext }}
    securityContext:
{{ toYaml . | indent 6 }}
    {{- end }}
    {{- if .Values.proxy.nodeSelector }}
    nodeSelector:
{{ toYaml .Values.proxy.nodeSelector | indent 6 }}
    {{- end }}
    {{- if .Values.proxy.tolerations }}
    tolerations:
{{ toYaml .Values.proxy.tolerations | indent 6 }}
    {{- end }}
    terminationGracePeriodSeconds: {{ .Values.proxy.gracePeriod }}
    {{- include "pulsar.jvm.options" .Values.proxy | nindent 4 }}
    {{- if .Values.global.imagePullSecrets }}
    imagePullSecrets:
{{ toYaml .Values.global.imagePullSecrets | indent 6 }}
    {{- end }}
  {{- if .Values.istio.enabled }}
  istio:
    enabled: true
    {{- if eq .Values.ingress.proxy.type "IstioGateway" }}
    gateway:
      selector:
{{- include "pulsar.istio.gateway.selector" . | indent 8 }}
      tls:
        certSecretName: {{ .Values.istio.gateway.tls.certSecretName | quote }}
        mode: "simple"
    {{- end }}
  {{- end }}
  config:
    {{- if .Values.pulsar_metadata.clusterName }}
    clusterName: {{ .Values.pulsar_metadata.clusterName }}
    {{- end }}
    {{- if .Values.proxy.kopProxy.enabled }}
    kopProxy:
      enabled: {{ .Values.proxy.kopProxy.enabled }}
      kafkaAdvertisedListener: {{ .Values.proxy.kopProxy.kafkaAdvertisedListener }}
    {{- end }}
    usePodIPAsAdvertisedAddress: {{ .Values.broker.usePodIPAsAdvertisedAddress | default "false" }}
    tls:
      enabled: {{ and (.Values.tls.enabled) (.Values.tls.proxy.enabled) }}
    custom:
{{- with .Values.proxy.configData }}
{{ toYaml . | indent 6 }}
{{- end }}
      {{- if .Values.auth.authentication.enabled }}
      authenticationEnabled: "true"
      authenticateOriginalAuthData: "true"
      forwardAuthorizationCredentials: "true"
      authenticationProviders: {{ include "pulsar.authenticationProviders" . }}
{{- include "pulsar.authConfiguration" . | indent 6 }}
      superUserRoles: "{{ .Values.auth.superUsers.proxy }}"
      {{- end }}
      {{- if .Values.proxy.websocket.enabled }}
      PULSAR_PREFIX_webSocketServiceEnabled: "true"
      {{- end }}
      {{- if and (.Values.tls.enabled) (.Values.tls.proxy.enabled) }}
      {{- if .Values.certs.internal_issuer.enabled }}
      tlsAllowInsecureConnection: "true"
      tlsTrustCertsFilePath: "/etc/tls/pulsar-proxy-tls/ca.crt"
      {{- end }}
      {{- end }}
      {{- if .Values.proxy.authenticateMetricsEndpoint.enabled }}
      PULSAR_PREFIX_authenticateMetricsEndpoint: "true"
      {{- else }}
      PULSAR_PREFIX_authenticateMetricsEndpoint: "false"
      {{- end }}
  dnsNames:
  {{- if or .Values.domain.enabled (and .Values.ingress.proxy.enabled .Values.ingress.proxy.external_domain) }}
    - "{{ template "pulsar.service_domain" . }}"
  {{- else }}
    []
  {{- end }}
  issuerRef:
    name: ""
  {{ if and .Values.tls.enabled .Values.tls.proxy.enabled }}
  certSecretName: "{{ template "pulsar.proxy.tls.secret.name" . }}"
  {{- end }}
  apiObjects:
    {{- if .Values.tls.proxy.enabled }}
    statefulSet:
      volumeMounts:
    {{- include "pulsar.proxy.certs.volumeMounts" . | nindent 6 }}
    {{- end }}
    externalService:
  {{- if and .Values.ingress.proxy.enabled (ne .Values.ingress.proxy.type "IstioGateway") }}
      metadata:
        name: "{{ template "pulsar.fullname" . }}-{{ .Values.proxy.component }}-ingress"
        {{- if .Values.ingress.proxy.annotations }}
        annotations:
        {{- with .Values.ingress.proxy.annotations }}
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- end }}
      {{- if .Values.ingress.proxy.httpPortOverride }}
      ports:
      - port: {{ .Values.ingress.proxy.httpPortOverride }}
        name: "http"
      {{- end }}
      {{- if ne .Values.ingress.proxy.type "LoadBalancer" }}
      type: {{ .Values.ingress.proxy.type }}
      {{ else }}
      {{- if and .Values.ingress.proxy.tls.enabled (not .Values.tls.enabled) (not .Values.tls.proxy.enabled)}}
      type: LoadBalancer
      exposeSSLPort: true
      {{- end }}
      {{- end }}
  {{- else }}
      {}
  {{- end }}
  {{- with .Values.proxy.customization }}
  customization:
  {{- toYaml . | nindent 2 -}}
  {{- end }}
{{- end }}
