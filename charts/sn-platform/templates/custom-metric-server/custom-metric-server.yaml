#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

{{- if and .Values.components.custom_metric_server .Values.custom_metric_server.enabled }}
kind: ServiceAccount
apiVersion: v1
metadata:
  name: "{{ template "pulsar.fullname" . }}-{{ .Values.custom_metric_server.component }}-serviceaccount"
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "pulsar.standardLabels" . | nindent 4 }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: "{{ template "pulsar.fullname" . }}-{{ .Values.custom_metric_server.component }}-clusterrole"
  labels:
  {{- include "pulsar.standardLabels" . | nindent 4 }}
rules:
  - apiGroups:
      - ""
    resources:
      - pods
      - nodes
      - nodes/stats
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: "{{ template "pulsar.fullname" . }}-{{ .Values.custom_metric_server.component }}-reader"
  labels:
  {{- include "pulsar.standardLabels" . | nindent 4 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: "{{ template "pulsar.fullname" . }}-{{ .Values.custom_metric_server.component }}-clusterrole"
subjects:
  - kind: ServiceAccount
    name: "{{ template "pulsar.fullname" . }}-{{ .Values.custom_metric_server.component }}-serviceaccount"
    namespace: {{ .Values.namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: "{{ template "pulsar.fullname" . }}-{{ .Values.custom_metric_server.component }}-system:auth-delegator"
  labels:
    {{- include "pulsar.standardLabels" . | nindent 4 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
  - kind: ServiceAccount
    name: "{{ template "pulsar.fullname" . }}-{{ .Values.custom_metric_server.component }}-serviceaccount"
    namespace: {{ .Values.namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: "{{ template "pulsar.fullname" . }}-{{ .Values.custom_metric_server.component }}-auth-reader"
  namespace: kube-system
  labels:
  {{- include "pulsar.standardLabels" . | nindent 4 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: extension-apiserver-authentication-reader
subjects:
  - kind: ServiceAccount
    name: "{{ template "pulsar.fullname" . }}-{{ .Values.custom_metric_server.component }}-serviceaccount"
    namespace: {{ .Values.namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: "{{ template "pulsar.fullname" . }}-{{ .Values.custom_metric_server.component }}-resources-clusterrole"
  labels:
    {{- include "pulsar.standardLabels" . | nindent 4 }}
rules:
  - apiGroups:
      - custom.metrics.k8s.io
      - external.metrics.k8s.io
    resources: ["*"]
    verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: "{{ template "pulsar.fullname" . }}-{{ .Values.custom_metric_server.component }}-hpa-controller-custom-metrics"
  labels:
    {{- include "pulsar.standardLabels" . | nindent 4 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: "{{ template "pulsar.fullname" . }}-{{ .Values.custom_metric_server.component }}-resources-clusterrole"
subjects:
  - kind: ServiceAccount
    name: horizontal-pod-autoscaler
    namespace: kube-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    cloud.streamnative.io/role: custom-metrics-apiserver
    {{- include "pulsar.standardLabels" . | nindent 4 }}
  name: "{{ template "pulsar.fullname" . }}-{{ .Values.custom_metric_server.component }}-apiserver"
  namespace: {{ .Values.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      cloud.streamnative.io/role: custom-metrics-apiserver
  template:
    metadata:
      labels:
        cloud.streamnative.io/role: custom-metrics-apiserver
      name: custom-metrics-apiserver
    spec:
      serviceAccountName: "{{ template "pulsar.fullname" . }}-{{ .Values.custom_metric_server.component }}-serviceaccount"
      containers:
        - name: custom-metrics-apiserver
          image: "{{ .Values.images.custom_metric_server.repository }}:{{ .Values.images.custom_metric_server.tag }}"
          args:
            - --secure-port=6443
            - --tls-cert-file=/var/run/serving-cert/serving.crt
            - --tls-private-key-file=/var/run/serving-cert/serving.key
            - --logtostderr=true
            - --prometheus-url={{ template "metricserver.prometheus.url" . }}
            - --metrics-relist-interval={{ .Values.custom_metric_server.relist_interval }}
            - --config=/etc/adapter/config.yaml
          ports:
            - containerPort: 6443
          volumeMounts:
            - mountPath: /var/run/serving-cert
              name: volume-serving-cert
              readOnly: true
            - mountPath: /etc/adapter/
              name: config
              readOnly: true
            - mountPath: /tmp
              name: tmp-vol
      volumes:
        - name: volume-serving-cert
          secret:
            secretName: {{ .Values.custom_metric_server.cert_secret_name }}
        - name: config
          configMap:
            name: "{{ template "pulsar.fullname" . }}-{{ .Values.custom_metric_server.component }}-config"
        - name: tmp-vol
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: "{{ template "pulsar.fullname" . }}-{{ .Values.custom_metric_server.component }}-apiserver-service"
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "pulsar.standardLabels" . | nindent 4 }}
spec:
  ports:
    - port: 443
      targetPort: 6443
  selector:
    cloud.streamnative.io/role: custom-metrics-apiserver
---
apiVersion: apiregistration.k8s.io/v1beta1
kind: APIService
metadata:
  name: v1beta1.custom.metrics.k8s.io
  labels:
    {{- include "pulsar.standardLabels" . | nindent 4 }}
spec:
  service:
    name: "{{ template "pulsar.fullname" . }}-{{ .Values.custom_metric_server.component }}-apiserver-service"
    namespace: {{ .Values.namespace }}
  group: custom.metrics.k8s.io
  version: v1beta1
  insecureSkipTLSVerify: true
  groupPriorityMinimum: 100
  versionPriority: 100
---
apiVersion: apiregistration.k8s.io/v1beta1
kind: APIService
metadata:
  name: v1beta2.custom.metrics.k8s.io
  labels:
    {{- include "pulsar.standardLabels" . | nindent 4 }}
spec:
  service:
    name: "{{ template "pulsar.fullname" . }}-{{ .Values.custom_metric_server.component }}-apiserver-service"
    namespace: {{ .Values.namespace }}
  group: custom.metrics.k8s.io
  version: v1beta2
  insecureSkipTLSVerify: true
  groupPriorityMinimum: 100
  versionPriority: 200
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: "{{ template "pulsar.fullname" . }}-{{ .Values.custom_metric_server.component }}-config"
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "pulsar.standardLabels" . | nindent 4 }}
data:
  config.yaml: |
    rules:
    - seriesQuery: 'container_cpu_usage_seconds_total{namespace!~"(sn-system|kube-system|olm|cert-manager)"}'
      seriesFilters: []
      resources:
        overrides:
          pod:
            resource: pod
          namespace:
            resource: namespace
      name:
        matches: 'container_cpu_usage_seconds_total'
        as: 'cpu_usage'
      metricsQuery: sum(rate(container_cpu_usage_seconds_total{<<.LabelMatchers>>}[5m])) by (<<.GroupBy>>) / (sum(container_spec_cpu_shares{<<.LabelMatchers>>}/1000) by (<<.GroupBy>>))  * 100
    - seriesQuery: 'container_network_receive_bytes_total{namespace!~"(sn-system|kube-system|olm|cert-manager)"}'
      seriesFilters: []
      resources:
        overrides:
          pod:
            resource: pod
          namespace:
            resource: namespace
      name:
        matches: 'container_network_receive_bytes_total'
        as: 'network_in_rate_kb'
      metricsQuery: rate(container_network_receive_bytes_total{<<.LabelMatchers>>}[5m]) / 1024
    - seriesQuery: 'container_network_transmit_bytes_total{namespace!~"(sn-system|kube-system|olm|cert-manager)"}'
      seriesFilters: []
      resources:
        overrides:
          pod:
            resource: pod
          namespace:
            resource: namespace
      name:
        matches: 'container_network_transmit_bytes_total'
        as: 'network_out_rate_kb'
      metricsQuery: rate(container_network_transmit_bytes_total{<<.LabelMatchers>>}[5m]) / 1024
    - seriesQuery: 'container_fs_reads_bytes_total{namespace!~"(sn-system|kube-system|olm|cert-manager)"}'
      seriesFilters: []
      resources:
        overrides:
          pod:
            resource: pod
          namespace:
            resource: namespace
      name:
        matches: 'container_fs_reads_bytes_total'
        as: 'disk_read_rate_kb'
      metricsQuery: sum(rate(container_fs_reads_bytes_total{<<.LabelMatchers>>}[5m])) by (<<.GroupBy>>) / 1024
    - seriesQuery: 'container_fs_writes_bytes_total{namespace!~"(sn-system|kube-system|olm|cert-manager)"}'
      seriesFilters: []
      resources:
        overrides:
          pod:
            resource: pod
          namespace:
            resource: namespace
      name:
        matches: 'container_fs_writes_bytes_total'
        as: 'disk_write_rate_kb'
      metricsQuery: sum(rate(container_fs_writes_bytes_total{<<.LabelMatchers>>}[5m])) by (<<.GroupBy>>) / 1024
{{- end }}
