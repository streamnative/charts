#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
# deploy BookKeeperCluster only when `components.bookkeeper and operator.enabled` is true
{{- if .Values.components.bookkeeper }}
apiVersion: bookkeeper.streamnative.io/v1alpha1
kind: BookKeeperCluster
metadata:
  name: "{{ template "pulsar.fullname" . }}-{{ .Values.bookkeeper.component }}"
  namespace: {{ template "pulsar.namespace" . }}
  annotations:
    "cloud.streamnative.io/enable-config-prefix": "false"
  labels:
    {{- include "pulsar.standardLabels" . | nindent 4 }}
    component: {{ .Values.bookkeeper.component }}
{{- with .Values.bookkeeper.labels }}
{{ toYaml . | indent 4 }}
{{- end }}
spec:
  zkServers: "{{ template "pulsar.zookeeper.connect" . }}"
  replicas: {{ .Values.bookkeeper.replicaCount }}
  image: "{{ .Values.images.bookie.repository }}:{{ .Values.images.bookie.tag }}"
  imagePullPolicy: {{ .Values.images.bookie.pullPolicy }}
  pod:
    {{- if .Values.bookkeeper.serviceAccount.use }}
    serviceAccountName: {{ template "pulsar.bookkeeper.serviceAccount" . }}
    {{- end }}
    labels:
      {{- include "pulsar.template.labels" . | nindent 6 }}
      component: {{ .Values.bookkeeper.component }}
{{- with .Values.bookkeeper.labels }}
{{ toYaml . | indent 6 }}
{{- end }}
{{- if or .Values.monitoring.datadog (and .Values.prometheus.scrape.bookkeeper .Values.prometheus.scrape.enabled) .Values.bookkeeper.annotations }}
    annotations:
      {{- if .Values.monitoring.datadog }}
      {{- include "pulsar.bookkeeper.datadog.annotation" . | nindent 6 }}
      {{- end }}
{{- if (and .Values.prometheus.scrape.bookkeeper .Values.prometheus.scrape.enabled) }}
      prometheus.io/scrape: "true"
      prometheus.io/port: "{{ .Values.bookkeeper.ports.http }}"
{{- end }}
{{- with .Values.bookkeeper.annotations }}
{{ toYaml . | indent 6 }}
{{- end }}
{{- end }}
    affinity:
      {{- if .Values.bookkeeper.affinity.customRules }}
{{ toYaml .Values.bookkeeper.affinity.customRules | indent 6 }}
      {{- end }}
      {{- if and .Values.affinity.anti_affinity .Values.bookkeeper.affinity.anti_affinity }}
      podAntiAffinity:
        {{ .Values.bookkeeper.affinity.type }}:
          {{ if eq .Values.bookkeeper.affinity.type "requiredDuringSchedulingIgnoredDuringExecution" }}
          - labelSelector:
              matchExpressions:
                - key: "app"
                  operator: In
                  values:
                    - "{{ template "pulsar.name" . }}"
                - key: "release"
                  operator: In
                  values:
                    - {{ .Release.Name }}
                - key: "component"
                  operator: In
                  values:
                    - {{ .Values.bookkeeper.component }}
            topologyKey: "kubernetes.io/hostname"
          {{ else }}
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                      - "{{ template "pulsar.name" . }}"
                  - key: "release"
                    operator: In
                    values:
                      - {{ .Release.Name }}
                  - key: "component"
                    operator: In
                    values:
                      - {{ .Values.bookkeeper.component }}
              topologyKey: "kubernetes.io/hostname"
          {{ end }}
      {{- end }}
    {{- if .Values.bookkeeper.resources }}
    resources:
{{ toYaml .Values.bookkeeper.resources | indent 6 }}
    {{- end }}
    {{- if .Values.bookkeeper.securityContext }}
    securityContext: {{ .Values.bookkeeper.securityContext }}
    {{- end }}
    {{- if .Values.bookkeeper.nodeSelector }}
    nodeSelector:
{{ toYaml .Values.bookkeeper.nodeSelector | indent 6 }}
    {{- end }}
    {{- if .Values.bookkeeper.tolerations }}
    tolerations:
{{ toYaml .Values.bookkeeper.tolerations | indent 6 }}
    {{- end }}
    terminationGracePeriodSeconds: {{ .Values.bookkeeper.gracePeriod }}
    jvmOptions:
      memoryOptions:
        - {{ .Values.bookkeeper.configData.PULSAR_MEM }}
      gcOptions:
        - {{ .Values.bookkeeper.configData.PULSAR_GC }}
    {{- if .Values.global.imagePullSecrets }}
    imagePullSecrets:
{{ toYaml .Values.global.imagePullSecrets | indent 6 }}
    {{- end }}
    {{- if .Values.bookkeeper.operator.adopt_existing }}
    volumes:
    {{- if not (and .Values.volumes.persistence .Values.bookkeeper.volumes.persistence) }}
    - name: "{{ template "pulsar.fullname" . }}-{{ .Values.bookkeeper.component }}-{{ .Values.bookkeeper.volumes.journal.name }}"
      emptyDir: {}
    - name: "{{ template "pulsar.fullname" . }}-{{ .Values.bookkeeper.component }}-{{ .Values.bookkeeper.volumes.ledgers.name }}"
      emptyDir: {}
    {{- end }}
    {{- include "pulsar.bookkeeper.certs.volumes" . | nindent 4 }}
    {{- include "pulsar.bookkeeper.log.volumes" . | nindent 4 }}
    {{- end }}
  {{- if and .Values.volumes.persistence .Values.bookkeeper.volumes.persistence}}
  storage:
    journal:
      numVolumes: {{ .Values.bookkeeper.volumes.journal.numVolumes | default 1 }}
      numDirsPerVolume: {{ .Values.bookkeeper.volumes.journal.numDirsPerVolume | default 1 }}
      volumeClaimTemplate:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.bookkeeper.volumes.journal.size }}
        {{- include "pulsar.bookkeeper.journal.storage.class" . | nindent 8 }}
    ledger:
      numVolumes: {{ .Values.bookkeeper.volumes.ledgers.numVolumes | default 1 }}
      numDirsPerVolume: {{ .Values.bookkeeper.volumes.ledgers.numDirsPerVolume | default 1 }}
      volumeClaimTemplate:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.bookkeeper.volumes.ledgers.size }}
        {{- include "pulsar.bookkeeper.ledgers.storage.class" . | nindent 8 }}
    reclaimPolicy: Delete
  {{- end }}
  config:
    custom:
{{- if .Values.bookkeeper.custom }}
{{ toYaml .Values.bookkeeper.custom | indent 6 }}
{{- else }}
{{ toYaml .Values.bookkeeper.configData | indent 6 }}
{{- end }}
      zkLedgersRootPath: "{{ .Values.metadataPrefix }}/ledgers"
      # enable bookkeeper http server
      httpServerEnabled: "true"
      httpServerPort: "{{ .Values.bookkeeper.ports.http }}"
      # config the stats provider
      statsProviderClass: org.apache.bookkeeper.stats.prometheus.PrometheusMetricsProvider
      # use hostname as the bookie id
      useHostNameAsBookieID: "true"
      {{- if .Values.components.autorecovery }}
      # disable auto recovery on bookies since we will start AutoRecovery in separated pods
      autoRecoveryDaemonEnabled: "false"
      {{- end }}
      # Do not retain journal files as it increase the disk utilization
      journalMaxBackups: "0"
      {{- if .Values.bookkeeper.operator.adopt_existing }}
      # if adopting existing bk cluster then also keep existing ledger/journal dir setting
      journalDirectories: "/pulsar/data/bookkeeper/journal"
      PULSAR_PREFIX_journalDirectories: "/pulsar/data/bookkeeper/journal"
      ledgerDirectories: "/pulsar/data/bookkeeper/ledgers"
      PULSAR_PREFIX_ledgerDirectories: "/pulsar/data/bookkeeper/ledgers"
      {{- end }}
      BOOKIE_MEM: {{ .Values.bookkeeper.configData.BOOKIE_MEM }}
{{- include "pulsar.bookkeeper.config.tls" . | nindent 6 }}
{{ (.Files.Glob "conf/bookie/log4j2.yaml").AsConfig | indent 6 }}
  autoRecovery:
    {{- if and .Values.components.autoscaling .Values.autorecovery.autoscaling.maxReplicas }}
    autoScalingPolicy:
      maxReplicas: {{ .Values.autorecovery.autoscaling.maxReplicas }}
      {{- if .Values.autorecovery.autoscaling.minReplicas }}
      minReplicas: {{ .Values.autorecovery.autoscaling.minReplicas }}
      {{- end }}
      {{- if .Values.autorecovery.autoscaling.metrics }}
      metrics:
{{- with .Values.autorecovery.autoscaling.metrics }}
{{ toYaml . | indent 8 }}
{{- end }}
      {{- end }}
      {{- if .Values.autorecovery.autoscaling.behavior }}
      behavior:
{{- with .Values.autorecovery.autoscaling.behavior }}
{{ toYaml . | indent 8 }}
{{- end }}
      {{- end }}
    {{- end }}
    {{- if .Values.components.autorecovery }}
    replicas: {{ .Values.autorecovery.replicaCount }}
    {{- else }}
    replicas: 0
    {{- end }}
    pod:
      labels:
        {{- include "pulsar.template.labels" . | nindent 8 }}
        component: {{ .Values.autorecovery.component }}
{{- if or (and .Values.prometheus.scrape.autorecovery .Values.prometheus.scrape.enabled) .Values.autorecovery.annotations }}
      annotations:
{{- if and .Values.prometheus.scrape.autorecovery .Values.prometheus.scrape.enabled }}        
        prometheus.io/scrape: "true"
        prometheus.io/port: "{{ .Values.autorecovery.ports.http }}"
{{- end }}
{{- with .Values.autorecovery.annotations }}
{{ toYaml . | indent 8 }}
{{- end }}
{{- end }}      
      {{- if .Values.autorecovery.securityContext }}
      securityContext: {{ .Values.autorecovery.securityContext }}
      {{- end }}
      {{- if .Values.autorecovery.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.autorecovery.nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.autorecovery.tolerations }}
      tolerations:
{{ toYaml .Values.autorecovery.tolerations | indent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: {{ .Values.autorecovery.gracePeriod }}
      affinity:
        {{- if .Values.autorecovery.affinity.customRules }}
{{ toYaml .Values.autorecovery.affinity.customRules | indent 8 }}
        {{- end }}
        {{- if and .Values.affinity.anti_affinity .Values.autorecovery.affinity.anti_affinity}}
        podAntiAffinity:
          {{ .Values.autorecovery.affinity.type }}:
            {{ if eq .Values.autorecovery.affinity.type "requiredDuringSchedulingIgnoredDuringExecution" }}
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                      - "{{ template "pulsar.name" . }}"
                  - key: "release"
                    operator: In
                    values:
                      - {{ .Release.Name }}
                  - key: "component"
                    operator: In
                    values:
                      - {{ .Values.autorecovery.component }}
              topologyKey: "kubernetes.io/hostname"
            {{ else }}
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: "app"
                      operator: In
                      values:
                        - "{{ template "pulsar.name" . }}"
                    - key: "release"
                      operator: In
                      values:
                        - {{ .Release.Name }}
                    - key: "component"
                      operator: In
                      values:
                        - {{ .Values.autorecovery.component }}
                topologyKey: "kubernetes.io/hostname"
            {{ end }}
        {{- end }}
      {{- if .Values.autorecovery.resources }}
      resources:
{{ toYaml .Values.autorecovery.resources | indent 8 }}
      {{- end }}
    conf:
      {{- include "pulsar.bookkeeper.config.common" . | nindent 6 }}
{{ toYaml .Values.autorecovery.configData | indent 6 }}
{{ (.Files.Glob "conf/autorecovery/log4j2.yaml").AsConfig | indent 6 }}
  {{- if and .Values.components.autoscaling .Values.bookkeeper.autoscaling.maxReplicas }}
  autoScalingPolicy:
    maxReplicas: {{ .Values.bookkeeper.autoscaling.maxReplicas }}
    {{- if .Values.bookkeeper.autoscaling.minReplicas }}
    minReplicas: {{ .Values.bookkeeper.autoscaling.minReplicas }}
    {{- end }}
    {{- if .Values.bookkeeper.autoscaling.metrics }}
    metrics:
{{- with .Values.bookkeeper.autoscaling.metrics }}
{{ toYaml . | indent 6 }}
{{- end }}
    {{- end }}
    {{- if .Values.bookkeeper.autoscaling.behavior }}
    behavior:
{{- with .Values.bookkeeper.autoscaling.behavior }}
{{ toYaml . | indent 6 }}
{{- end }}
    {{- end }}
  {{- end }}
  apiObjects:
    clientService: {}
    headlessService:
      metadata:
        name: "{{ template "pulsar.fullname" . }}-{{ .Values.bookkeeper.component }}"
    autoRecoveryHeadlessService:
      metadata:
        name: "{{ template "pulsar.fullname" . }}-{{ .Values.autorecovery.component }}"
    bookieStatefulSet:
      metadata:
        name: "{{ template "pulsar.fullname" . }}-{{ .Values.bookkeeper.component }}"
      updatePolicy:
      {{- if .Values.bookkeeper.operator.adopt_existing }}
      {{ .Values.bookkeeper.operator.updatePolicy }}
      {{- else }}
        - all
      {{- end }}
      {{- if .Values.bookkeeper.operator.adopt_existing }}
      {{- if and .Values.volumes.persistence .Values.bookkeeper.volumes.persistence}}
      volumeClaimTemplates:
      - metadata:
          name: "{{ template "pulsar.fullname" . }}-{{ .Values.bookkeeper.component }}-{{ .Values.bookkeeper.volumes.journal.name }}"
        spec:
          accessModes: [ "ReadWriteOnce" ]
          resources:
            requests:
              storage: {{ .Values.bookkeeper.volumes.journal.size }}
          {{- include "pulsar.bookkeeper.journal.storage.class" . | nindent 10 }}
      - metadata:
          name: "{{ template "pulsar.fullname" . }}-{{ .Values.bookkeeper.component }}-{{ .Values.bookkeeper.volumes.ledgers.name }}"
        spec:
          accessModes: [ "ReadWriteOnce" ]
          resources:
            requests:
              storage: {{ .Values.bookkeeper.volumes.ledgers.size }}
          {{- include "pulsar.bookkeeper.ledgers.storage.class" . | nindent 10 }}
      {{- end }}
      volumeMounts:
      - name: "{{ template "pulsar.fullname" . }}-{{ .Values.bookkeeper.component }}-{{ .Values.bookkeeper.volumes.journal.name }}"
        mountPath: /pulsar/data/bookkeeper/journal
      - name: "{{ template "pulsar.fullname" . }}-{{ .Values.bookkeeper.component }}-{{ .Values.bookkeeper.volumes.ledgers.name }}"
        mountPath: /pulsar/data/bookkeeper/ledgers
      {{- include "pulsar.bookkeeper.certs.volumeMounts" . | nindent 6 }}
      {{- include "pulsar.bookkeeper.log.volumeMounts" . | nindent 6 }}
      {{- end }}
    autoRecoveryStatefulSet:
      metadata:
        name: "{{ template "pulsar.fullname" . }}-{{ .Values.autorecovery.component }}"
      updatePolicy:
      {{- if .Values.autorecovery.operator.adopt_existing }}
      {{ .Values.autorecovery.operator.updatePolicy }}
      {{- else }}
        - all
      {{- end }}
    configMap:
      metadata:
        name: "{{ template "pulsar.fullname" . }}-{{ .Values.bookkeeper.component }}"
    autoRecoveryConfigMap:
      metadata:
        name: "{{ template "pulsar.fullname" . }}-{{ .Values.autorecovery.component }}"
    pdb:
      metadata:
        name: "{{ template "pulsar.fullname" . }}-{{ .Values.bookkeeper.component }}"
{{- end }}
