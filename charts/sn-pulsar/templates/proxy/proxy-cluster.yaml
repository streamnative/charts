#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
# deploy PulsarProxy only when `components.proxy and operator.enabled` is true
{{- if and .Values.components.proxy .Values.proxy.operator.enabled }}
apiVersion: pulsar.streamnative.io/v1alpha1
kind: PulsarProxy
metadata:
  # no need to append component name to pod name here as operator will add 
  name: "{{ template "pulsar.fullname" . }}"
  namespace: {{ template "pulsar.namespace" . }}
  annotations:
    "cloud.streamnative.io/enable-config-prefix": "false"
  labels:
    {{- include "pulsar.standardLabels" . | nindent 4 }}
    component: {{ .Values.proxy.component }}
spec:
  zkServers: "{{ template "pulsar.zookeeper.connect" . }}{{ .Values.metadataPrefix }}"
  brokerAddress: {{ template "pulsar.proxy.broker.service.address" . }}
  replicas: {{ .Values.proxy.replicaCount }}
  image: "{{ .Values.images.proxy.repository }}:{{ .Values.images.proxy.tag }}"
  imagePullPolicy: {{ .Values.images.proxy.pullPolicy }}
  pod:
    labels:
      {{- include "pulsar.template.labels" . | nindent 6 }}
      component: {{ .Values.proxy.component }}
    annotations:
      {{- if .Values.monitoring.datadog }}
      {{- include "pulsar.proxy.datadog.annotation" . | nindent 6 }}
      {{- end }}
      prometheus.io/scrape: "true"
      prometheus.io/port: "{{ .Values.proxy.ports.http }}"
{{- with .Values.proxy.annotations }}
{{ toYaml . | indent 6 }}
{{- end }}
    {{- if and .Values.affinity.anti_affinity .Values.proxy.affinity.anti_affinity }}
    affinity:
      podAntiAffinity:
        {{ .Values.proxy.affinity.type }}:
          {{ if eq .Values.proxy.affinity.type "requiredDuringSchedulingIgnoredDuringExecution" }}
          - labelSelector:
              matchExpressions:
                - key: "app"
                  operator: In
                  values:
                    - "{{ template "pulsar.name" . }}"
                - key: "release"
                  operator: In
                  values:
                    - {{ .Release.Name }}
                - key: "component"
                  operator: In
                  values:
                    - {{ .Values.proxy.component }}
            topologyKey: "kubernetes.io/hostname"
          {{ else }}
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                      - "{{ template "pulsar.name" . }}"
                  - key: "release"
                    operator: In
                    values:
                      - {{ .Release.Name }}
                  - key: "component"
                    operator: In
                    values:
                      - {{ .Values.proxy.component }}
              topologyKey: "kubernetes.io/hostname"
          {{ end }}
    {{- end }}
    vars:
    - name: PULSAR_PREFIX_OIDCTokenAudienceID
      valueFrom:
          secretKeyRef:
            name: {{ template "pulsar.vault-secret-key-name" . }}
            key: PULSAR_PREFIX_OIDCTokenAudienceID
    - name: brokerClientAuthenticationParameters
      valueFrom:
          secretKeyRef:
            name: {{ template "pulsar.vault-secret-key-name" . }}
            key: brokerClientAuthenticationParameters
    #envFrom:
    #- secretRef:
    #    name: {{ template "pulsar.vault-secret-key-name" . }}
    {{- if .Values.proxy.resources }}
    resources:
      requests:
        memory: "{{ .Values.proxy.resources.requests.memory }}"
        cpu: "{{ .Values.proxy.resources.requests.cpu }}"
    {{- end }}
    {{- if .Values.proxy.securityContext }}
    securityContext: {{ .Values.proxy.securityContext }}
    {{- end }}
    {{- if .Values.proxy.nodeSelector }}
    nodeSelector:
{{ toYaml .Values.proxy.nodeSelector | indent 6 }}
    {{- end }}
    {{- if .Values.proxy.tolerations }}
    tolerations:
{{ toYaml .Values.proxy.tolerations | indent 6 }}
    {{- end }}
    terminationGracePeriodSeconds: {{ .Values.proxy.gracePeriod }}
    jvmOptions:
      extraOptions: []
      memoryOptions:
        - {{ .Values.proxy.configData.PULSAR_MEM }}
      gcOptions:
        - {{ .Values.proxy.configData.PULSAR_GC }}
      gcLoggingOptions: []
  config:
    tls:
      enabled: {{ and (.Values.tls.enabled) (.Values.tls.proxy.enabled) }}
    custom:
      zookeeperServers: "{{ template "pulsar.zookeeper.connect" . }}{{ .Values.metadataPrefix }}"
      {{- if .Values.pulsar_metadata.configurationStore }}
      configurationStoreServers: "{{ .Values.pulsar_metadata.configurationStore }}{{ .Values.pulsar_metadata.configurationStoreMetadataPrefix }}"
      {{- end }}
      {{- if not .Values.pulsar_metadata.configurationStore }}
      configurationStoreServers: "{{ template "pulsar.zookeeper.connect" . }}{{ .Values.metadataPrefix }}"
      {{- end }}
{{ toYaml .Values.proxy.configData | indent 6 }}
      {{- if .Values.auth.authentication.enabled }}
      authenticationEnabled: "true"
      authenticationProviders: "io.streamnative.pulsar.broker.authentication.AuthenticationProviderOIDCToken"
      brokerClientAuthenticationPlugin: "org.apache.pulsar.client.impl.auth.AuthenticationToken"
      PULSAR_PREFIX_vaultHost: {{ template "pulsar.vault.url" . }}
      PULSAR_PREFIX_OIDCPublicKeyPath: "{{ template "pulsar.vault.url" . }}/v1/identity/oidc/.well-known/keys"
      superUserRoles: "admin"
      {{- end }}
      {{- if .Values.auth.authorization.enabled }}
      authorizationEnabled: "true"
      authorizationProvider: "org.apache.pulsar.broker.authorization.PulsarAuthorizationProvider"
      {{- end }}
      {{- if and (.Values.tls.enabled) (.Values.tls.proxy.enabled) }}
      tlsAllowInsecureConnection: "true"
      tlsTrustCertsFilePath: "/etc/tls/pulsar-proxy-tls/ca.crt"
      {{- end }}
{{ (.Files.Glob "conf/proxy/log4j2.yaml").AsConfig | indent 4 }}
  dnsNames: []
  issuerRef:
    name: ""
  {{ if and .Values.tls.enabled .Values.tls.proxy.enabled }}
  certSecretName: {{ .Values.proxy.tlsSecretName }}
  {{- end }}
{{- end }}