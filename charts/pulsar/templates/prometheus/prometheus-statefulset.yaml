#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

{{- if .Values.monitoring.prometheus }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "{{ template "pulsar.fullname" . }}-{{ .Values.prometheus.component }}"
  namespace: {{ template "pulsar.namespace" . }}
  labels:
    {{- include "pulsar.standardLabels" . | nindent 4 }}
    component: {{ .Values.prometheus.component }}
spec:
  serviceName: "{{ template "pulsar.fullname" . }}-{{ .Values.prometheus.component }}"
  replicas: {{ .Values.prometheus.replicaCount }}
  selector:
    matchLabels:
      {{- include "pulsar.matchLabels" . | nindent 6 }}
      component: {{ .Values.prometheus.component }}
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        {{- include "pulsar.template.labels" . | nindent 8 }}
        component: {{ .Values.prometheus.component }}
      annotations:
{{- with .Values.prometheus.annotations }}
{{ toYaml . | indent 8 }}
{{- end }}
    spec:
    {{- if .Values.prometheus.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.prometheus.nodeSelector | indent 8 }}
    {{- end }}
    {{- if .Values.prometheus.tolerations }}
      tolerations:
{{ toYaml .Values.prometheus.tolerations | indent 8 }}
    {{- end }}
    {{- if and .Values.rbac.enable .Values.prometheus.serviceAccount.use }}
      serviceAccount: {{ template "pulsar.prometheus.serviceAccount" . }}
    {{- end }}
      terminationGracePeriodSeconds: {{ .Values.prometheus.gracePeriod }}
      {{- if .Values.prometheus.securityContext }}
      securityContext:
{{ toYaml .Values.prometheus.securityContext | indent 8 }}
      {{- end }}
      containers:
      {{- if .Values.configmapReload.prometheus.enabled }}
      - name: {{ template "pulsar.fullname" . }}-{{ .Values.prometheus.component }}-{{ .Values.configmapReload.prometheus.name }}
        image: "{{ .Values.configmapReload.prometheus.image.repository }}:{{ .Values.configmapReload.prometheus.image.tag }}"
        imagePullPolicy: "{{ .Values.configmapReload.prometheus.image.pullPolicy }}"
        args:
          - --volume-dir=/etc/config
          - --webhook-url=http://127.0.0.1:{{ .Values.prometheus.port }}{{ template "pulsar.control_center_path.prometheus" . }}/-/reload
        {{- range $key, $value := .Values.configmapReload.prometheus.extraArgs }}
          - --{{ $key }}={{ $value }}
        {{- end }}
        {{- range .Values.configmapReload.prometheus.extraVolumeDirs }}
          - --volume-dir={{ . }}
        {{- end }}
        resources:
{{ toYaml .Values.configmapReload.prometheus.resources | indent 10 }}
        volumeMounts:
          - name: config-volume
            mountPath: /etc/config
            readOnly: true
        {{- range .Values.configmapReload.prometheus.extraConfigmapMounts }}
          - name: {{ $.Values.configmapReload.prometheus.name }}-{{ .name }}
            mountPath: {{ .mountPath }}
            subPath: {{ .subPath }}
            readOnly: {{ .readOnly }}
        {{- end }}
      {{- end }} 
      - name: "{{ template "pulsar.fullname" . }}-{{ .Values.prometheus.component }}"
        image: "{{ .Values.images.prometheus.repository }}:{{ .Values.images.prometheus.tag }}"
        imagePullPolicy: {{ .Values.images.prometheus.pullPolicy }}
      {{- if .Values.prometheus.resources }}
        resources:
{{ toYaml .Values.prometheus.resources | indent 10 }}
      {{- end }}
        args:
          - --config.file=/etc/config/prometheus.yml
          {{- if .Values.prometheus.args.retention }}
          - --storage.tsdb.retention.time={{ .Values.prometheus.args.retention }}
          {{- end }}
          - --storage.tsdb.path=/prometheus
          - --web.console.libraries=/etc/prometheus/console_libraries
          - --web.console.templates=/etc/prometheus/consoles
  {{- if and .Values.ingress.control_center.enabled .Values.ingress.control_center.endpoints.prometheus }}
          - --web.external-url={{ template "pulsar.control_center_url" . }}{{ template "pulsar.control_center_path.prometheus" . }}/
  {{- end }}
          - --web.enable-lifecycle
        ports:
        - name: server
          containerPort: {{ .Values.prometheus.port }}
        {{- if .Values.prometheus.probe.readiness.enabled }}
        readinessProbe:
          httpGet:
            path: {{ template "pulsar.control_center_path.prometheus" . }}/-/ready
            port: {{ .Values.prometheus.port }}
          initialDelaySeconds: {{ .Values.prometheus.probe.readiness.initialDelaySeconds }}
          periodSeconds: {{ .Values.prometheus.probe.readiness.periodSeconds }}
          failureThreshold: {{ .Values.prometheus.probe.readiness.failureThreshold }}
        {{- end }}
        {{- if .Values.prometheus.probe.liveness.enabled }}
        livenessProbe:
          httpGet:
            path: {{ template "pulsar.control_center_path.prometheus" . }}/-/healthy
            port: {{ .Values.prometheus.port }}
          initialDelaySeconds: {{ .Values.prometheus.probe.liveness.initialDelaySeconds }}
          periodSeconds: {{ .Values.prometheus.probe.liveness.periodSeconds }}
          failureThreshold: {{ .Values.prometheus.probe.liveness.failureThreshold }}
        {{- end }}
        volumeMounts:
        - name: config-volume
          mountPath: /etc/config
        - name: "{{ template "pulsar.fullname" . }}-{{ .Values.prometheus.component }}-{{ .Values.prometheus.volumes.data.name }}"
          mountPath: /prometheus
        {{- include "pulsar.prometheus.token.volumeMounts" . | nindent 8 }}
      volumes:
      - name: config-volume
        configMap:
          name: "{{ template "pulsar.fullname" . }}-{{ .Values.prometheus.component }}"
    {{- range .Values.configmapReload.prometheus.extraConfigmapMounts }}
      - name: {{ $.Values.configmapReload.prometheus.name }}-{{ .name }}
        configMap:
          name: {{ .configMap }}
    {{- end }}
    {{- if not (and .Values.volumes.persistence .Values.prometheus.volumes.persistence) }}
      - name: "{{ template "pulsar.fullname" . }}-{{ .Values.prometheus.component }}-{{ .Values.prometheus.volumes.data.name }}"
        emptyDir: {}
    {{- end }}
    {{- if and .Values.volumes.persistence .Values.prometheus.volumes.persistence }}
      - name: "{{ template "pulsar.fullname" . }}-{{ .Values.prometheus.component }}-{{ .Values.prometheus.volumes.data.name }}"
        persistentVolumeClaim:
          claimName: "{{ template "pulsar.fullname" . }}-{{ .Values.prometheus.component }}-{{ .Values.prometheus.volumes.data.name }}"
    {{- end }}
    {{- include "pulsar.prometheus.token.volumes" . | nindent 6 }}
{{- end }}
