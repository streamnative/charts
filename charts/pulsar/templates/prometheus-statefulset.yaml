#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

{{- if .Values.monitoring.prometheus }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "{{ template "pulsar.fullname" . }}-{{ .Values.prometheus.component }}"
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "pulsar.standardLabels" . | nindent 4 }}
    component: {{ .Values.prometheus.component }}
spec:
  serviceName: "{{ template "pulsar.fullname" . }}-{{ .Values.prometheus.component }}"
  replicas: {{ .Values.prometheus.replicaCount }}
  selector:
    matchLabels:
      {{- include "pulsar.matchLabels" . | nindent 6 }}
      component: {{ .Values.prometheus.component }}
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        {{- include "pulsar.template.labels" . | nindent 8 }}
        component: {{ .Values.prometheus.component }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/prometheus-configmap.yaml") . | sha256sum }}
{{- with .Values.prometheus.annotations }}
{{ toYaml . | indent 8 }}
{{- end }}
    spec:
    {{- if .Values.prometheus.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.prometheus.nodeSelector | indent 8 }}
    {{- end }}
    {{- if .Values.prometheus.tolerations }}
      tolerations:
{{ toYaml .Values.prometheus.tolerations | indent 8 }}
    {{- end }}
    {{- if .Values.rbac.enable }}
      serviceAccount: "{{ template "pulsar.fullname" . }}-{{ .Values.rbac.roleName }}"
    {{- end }}
      terminationGracePeriodSeconds: {{ .Values.prometheus.gracePeriod }}
      containers:
      - name: "{{ template "pulsar.fullname" . }}-{{ .Values.prometheus.component }}"
        image: "{{ .Values.images.prometheus.repository }}:{{ .Values.images.prometheus.tag }}"
        imagePullPolicy: {{ .Values.images.prometheus.pullPolicy }}
      {{- if .Values.prometheus.resources }}
        resources:
{{ toYaml .Values.prometheus.resources | indent 10 }}
      {{- end }}
        command: ["sh", "-c"]
        args:
          - |
            /bin/prometheus \
              -config.file=/etc/prometheus/prometheus.yml \
              -storage.local.path=/prometheus \
  {{- if and .Values.external_dns.enabled .Values.ingress.control_center.enabled }}
  {{- if .Values.ingress.controller.services.https.enabled }}
              -web.external-url https://{{ printf "admin.%s.%s" .Release.Name .Values.external_dns.domain_filter }}/prometheus/ \
  {{- else }}
              -web.external-url http://{{ printf "admin.%s.%s" .Release.Name .Values.external_dns.domain_filter }}/prometheus/ \
  {{- end }}
  {{- end }}
              -web.console.libraries=/usr/share/prometheus/console_libraries \
              -web.console.templates=/usr/share/prometheus/consoles
        ports:
        - name: server
          containerPort: {{ .Values.prometheus.port }}
        volumeMounts:
        - name: "{{ template "pulsar.fullname" . }}-{{ .Values.prometheus.component }}-config"
          mountPath: /etc/prometheus
        - name: "{{ template "pulsar.fullname" . }}-{{ .Values.prometheus.component }}-{{ .Values.prometheus.volumes.data.name }}"
          mountPath: /prometheus
        {{- include "pulsar.prometheus.token.volumeMounts" . | nindent 8 }}
      volumes:
      - name: "{{ template "pulsar.fullname" . }}-{{ .Values.prometheus.component }}-config"
        configMap:
          name: "{{ template "pulsar.fullname" . }}-{{ .Values.prometheus.component }}"
    {{- if not (and .Values.volumes.persistence .Values.prometheus.volumes.persistence) }}
      - name: "{{ template "pulsar.fullname" . }}-{{ .Values.prometheus.component }}-{{ .Values.prometheus.volumes.data.name }}"
        emptyDir: {}
    {{- end }}
    {{- if and .Values.volumes.persistence .Values.prometheus.volumes.persistence }}
      - name: "{{ template "pulsar.fullname" . }}-{{ .Values.prometheus.component }}-{{ .Values.prometheus.volumes.data.name }}"
        persistentVolumeClaim:
          claimName: "{{ template "pulsar.fullname" . }}-{{ .Values.prometheus.component }}-{{ .Values.prometheus.volumes.data.name }}"
    {{- end }}
    {{- include "pulsar.prometheus.token.volumes" . | nindent 6 }}
{{- end }}
