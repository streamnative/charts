#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

{{- if .Values.components.sql_worker }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "presto.coordinator" . }}
  namespace: {{ template "pulsar.namespace" . }}
  labels:
    {{- include "pulsar.standardLabels" . | nindent 4 }}
    component: {{ .Values.presto.coordinator.component }}
spec:
  serviceName: "{{ template "pulsar.fullname" . }}-{{ .Values.presto.coordinator.component }}"
  replicas: {{ .Values.presto.coordinator.replicaCount }}
  selector:
    matchLabels:
      {{- include "pulsar.matchLabels" . | nindent 6 }}
      component: {{ .Values.presto.coordinator.component }}
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        {{- include "pulsar.template.labels" . | nindent 8 }}
        component: {{ .Values.presto.coordinator.component }}
      annotations:
        prometheus.io/scrape: "false"
        prometheus.io/port: "{{ .Values.presto.coordinator.ports.http }}"
{{- with .Values.presto.coordinator.annotations }}
{{ toYaml . | indent 8 }}
{{- end }}
    spec:
      {{- with .Values.presto.coordinator.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.presto.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
      {{- end }}
      affinity:
      {{- if and .Values.affinity.anti_affinity .Values.presto.coordinator.affinity.anti_affinity}}
        podAntiAffinity:
          {{ .Values.presto.coordinator.affinity.type }}:
          {{ if eq .Values.presto.coordinator.affinity.type "requiredDuringSchedulingIgnoredDuringExecution"}}
          - labelSelector:
              matchExpressions:
              - key: "app"
                operator: In
                values:
                - "{{ template "pulsar.name" . }}"
              - key: "release"
                operator: In
                values:
                - {{ .Release.Name }}
              - key: "component"
                operator: In
                values:
                - {{ .Values.presto.coordinator.component }}
            topologyKey: "kubernetes.io/hostname"
          {{ else }}
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: "app"
                      operator: In
                      values:
                      - "{{ template "pulsar.name" . }}"
                    - key: "release"
                      operator: In
                      values:
                      - {{ .Release.Name }}
                    - key: "component" 
                      operator: In
                      values:
                      - {{ .Values.presto.coordinator.component }}
                topologyKey: "kubernetes.io/hostname"
          {{ end }}
      {{- end }}
      terminationGracePeriodSeconds: {{ .Values.presto.coordinator.gracePeriod }}
      containers:
        - name: {{ .Chart.Name }}-coordinator
          image: "{{ .Values.images.presto.repository }}:{{ .Values.images.presto.tag }}"
          imagePullPolicy: {{ .Values.images.presto.pullPolicy }}
          {{- if .Values.presto.coordinator.probe.liveness.enabled }}
          livenessProbe:
            httpGet:
              path: /v1/cluster
              port: {{ .Values.presto.coordinator.ports.http }}
            initialDelaySeconds: {{ .Values.presto.coordinator.probe.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.presto.coordinator.probe.liveness.periodSeconds }}
            failureThreshold: {{ .Values.presto.coordinator.probe.liveness.failureThreshold }}
          {{- end }}
          {{- if .Values.presto.coordinator.probe.readiness.enabled }}
          readinessProbe:
            httpGet:
              path: /v1/cluster
              port: {{ .Values.presto.coordinator.ports.http }}
            initialDelaySeconds: {{ .Values.presto.coordinator.probe.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.presto.coordinator.probe.readiness.periodSeconds }}
            failureThreshold: {{ .Values.presto.coordinator.probe.readiness.failureThreshold }}
          {{- end }}
          {{- if .Values.presto.coordinator.resources }}
          resources:
{{ toYaml .Values.presto.coordinator.resources | indent 12 }}
          {{- end }}
          command: ["sh", "-c"]
          args:
            - >-
              bin/pulsar sql-worker run \
                --etc-dir={{ template "pulsar.home" . }}/conf/presto \
                --data-dir={{ template "pulsar.home" . }}/data;
          volumeMounts:
            - mountPath: {{ template "pulsar.home" . }}/conf/presto/node.properties
              name: config-volume
              subPath: node.properties
            - mountPath: {{ template "pulsar.home" . }}/conf/presto/log.properties
              name: config-volume
              subPath: log.properties
            - mountPath: {{ template "pulsar.home" . }}/conf/presto/jvm.config
              name: config-volume
              subPath: jvm.config
            - mountPath: {{ template "pulsar.home" . }}/conf/presto/config.properties
              name: config-volume
              subPath: config.properties
            - mountPath: {{ template "pulsar.home" . }}/conf/presto/catalog/pulsar.properties
              name: config-volume
              subPath: pulsar.properties
            {{- if .Values.auth.authentication.enabled }}
            {{- if eq .Values.auth.authentication.provider "jwt" }}
            - mountPath: "/pulsar/tokens"
              name: client-token
              readOnly: true
            {{- end }}
            {{- end }}
            {{- if and .Values.tls.enabled .Values.tls.broker.enabled }}
            - mountPath: "/pulsar/certs/ca"
              name: ca
              readOnly: true
            {{- end}}
          ports:
            - name: http-coord
              containerPort: {{ .Values.presto.coordinator.ports.http }}
              protocol: TCP
      volumes:
        {{- if .Values.auth.authentication.enabled }}
        {{- if eq .Values.auth.authentication.provider "jwt" }}
        - name: client-token
          secret:
            secretName: "{{ .Release.Name }}-token-{{ .Values.auth.superUsers.client }}"
            items:
              - key: TOKEN
                path: client/token
        {{- end}}
        {{- end}}
        {{- if and .Values.tls.enabled .Values.tls.broker.enabled }}
        - name: ca
          secret:
            secretName: "{{ .Release.Name }}-ca-tls"
            items:
              - key: ca.crt
                path: ca.crt
        {{- end}}
        - name: config-volume
          configMap:
            name: "{{ template "pulsar.fullname" . }}-{{ .Values.presto.coordinator.component }}"
{{- end }}
