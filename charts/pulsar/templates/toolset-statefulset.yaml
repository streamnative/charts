#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

{{- if .Values.components.toolset }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "{{ template "pulsar.fullname" . }}-{{ .Values.toolset.component }}"
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "pulsar.standardLabels" . | nindent 4 }}
    component: {{ .Values.toolset.component }}
spec:
  serviceName: "{{ template "pulsar.fullname" . }}-{{ .Values.toolset.component }}"
  replicas: {{ .Values.toolset.replicaCount }}
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel
  selector:
    matchLabels:
      {{- include "pulsar.matchLabels" . | nindent 6 }}
      component: {{ .Values.toolset.component }}
  template:
    metadata:
      labels:
        {{- include "pulsar.template.labels" . | nindent 8 }}
        component: {{ .Values.toolset.component }}
      annotations:
{{ toYaml .Values.toolset.annotations | indent 8 }}
    spec:
    {{- if .Values.toolset.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.toolset.nodeSelector | indent 8 }}
    {{- end }}
    {{- if .Values.toolset.tolerations }}
      tolerations:
{{ toYaml .Values.toolset.tolerations | indent 8 }}
    {{- end }}
      terminationGracePeriodSeconds: {{ .Values.toolset.gracePeriod }}
      containers:
      - name: "{{ template "pulsar.fullname" . }}-{{ .Values.toolset.component }}"
        image: "{{ .Values.images.broker.repository }}:{{ .Values.images.broker.tag }}"
        imagePullPolicy: {{ .Values.images.broker.pullPolicy }}
      {{- if .Values.toolset.resources }}
        resources:
{{ toYaml .Values.toolset.resources | indent 10 }}
      {{- end }}
        command: ["sh", "-c"]
        args:
        - >
          bin/apply-config-from-env.py conf/client.conf &&
          bin/apply-config-from-env.py conf/bookkeeper.conf &&
          sleep 10000000000
        envFrom:
        - configMapRef:
            name: "{{ template "pulsar.fullname" . }}-{{ .Values.toolset.component }}"
      {{- if or .Values.auth.authentication.enabled (and .Values.tls.enabled (or .Values.tls.broker.enabled .Values.tls.proxy.enabled)) }}
        volumeMounts:
          {{- if .Values.auth.authentication.enabled }}
          {{- if eq .Values.auth.authentication.provider "jwt" }}
          - mountPath: "/pulsar/tokens"
            name: client-token
            readOnly: true
          {{- end }}
          {{- end }}
          {{- if and (not .Values.toolset.useProxy) .Values.tls.broker.enabled }}
          - mountPath: "/pulsar/certs"
            name: broker-certs
            readOnly: true
          {{- end}}
          {{- if and .Values.toolset.useProxy .Values.tls.proxy.enabled }}
          - mountPath: "/pulsar/certs/proxy-ca"
            name: proxy-certs
            readOnly: true
          {{- end}}
      {{- end }}  
      {{- if or .Values.auth.authentication.enabled (and .Values.tls.enabled (or .Values.tls.broker.enabled .Values.tls.proxy.enabled)) }}
      volumes:
        {{- if .Values.auth.authentication.enabled }}
        {{- if eq .Values.auth.authentication.provider "jwt" }}
        - name: client-token
          secret:
            secretName: "{{ .Release.Name }}-token-{{ .Values.auth.superUsers.client }}"
            items:
              - key: TOKEN
                path: client/token
        {{- end}}
        {{- end}}
        {{- if and (not .Values.toolset.useProxy) .Values.tls.broker.enabled }}
        - name: broker-certs
          secret:
            secretName: "{{ template "pulsar.fullname" . }}-{{ .Values.tls.broker.cert_name }}"
            items:
              - key: ca.crt
                path: broker/ca.crt
        {{- end}}
        {{- if and .Values.toolset.useProxy .Values.tls.proxy.enabled }}
        - name: proxy-certs
          secret:
          {{- if and .Values.certs.public_issuer.enabled (eq .Values.certs.public_issuer.type "acme") }}
            secretName: {{ .Values.certs.lets_encrypt.ca_ref.secretName }}
            items:
              - key: {{ .Values.certs.lets_encrypt.ca_ref.keyName }}
                path: ca.crt
          {{- end}}
          {{- if not (and .Values.certs.public_issuer.enabled (eq .Values.certs.public_issuer.type "acme")) }}
            {{- if .Values.tls.broker.enabled }}
            # TODO: use the same cert as broker for now until #5971 is fixed
            #       https://github.com/apache/pulsar/pull/5971
            # secretName: "{{ template "pulsar.fullname" . }}-{{ .Values.tls.proxy.cert_name }}"
            secretName: "{{ template "pulsar.fullname" . }}-{{ .Values.tls.broker.cert_name }}"
            {{- end}}
            {{- if not .Values.tls.broker.enabled }}
            secretName: "{{ template "pulsar.fullname" . }}-{{ .Values.tls.proxy.cert_name }}"
            {{- end}}
            items:
              - key: ca.crt
                path: ca.crt
          {{- end}}
        {{- end}}
      {{- end}}
{{- end }}
