#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

{{- if .Values.components.streamnative_console }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "{{ template "pulsar.fullname" . }}-{{ .Values.streamnative_console.component }}"
  namespace: {{ template "pulsar.namespace" . }}
  labels:
    {{- include "pulsar.standardLabels" . | nindent 4 }}
    component: {{ .Values.streamnative_console.component }}
{{- with .Values.streamnative_console.labels }}
{{ toYaml . | indent 4 }}
{{- end }}
  annotations:
{{- with .Values.streamnative_console.annotations }}
{{ toYaml . | indent 4 }}
{{- end }}
spec:
  serviceName: "{{ template "pulsar.fullname" . }}-{{ .Values.streamnative_console.component }}"
  replicas: 1
  selector:
    matchLabels:
      {{- include "pulsar.matchLabels" . | nindent 6 }}
      component: {{ .Values.streamnative_console.component }}
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        {{- include "pulsar.template.labels" . | nindent 8 }}
        component: {{ .Values.streamnative_console.component }}
{{- with .Values.streamnative_console.labels }}
{{ toYaml . | indent 8 }}
{{- end }}
      annotations:
{{- with .Values.streamnative_console.annotations }}
{{ toYaml . | indent 8 }}
{{- end }}
    spec:
      {{- if .Values.global.imagePullSecrets }}
      imagePullSecrets: {{- toYaml .Values.global.imagePullSecrets | nindent 8 }}
      {{- end }}
    {{- if .Values.streamnative_console.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.streamnative_console.nodeSelector | indent 8 }}
    {{- end }}
    {{- if .Values.streamnative_console.tolerations }}
      tolerations:
{{ toYaml .Values.streamnative_console.tolerations | indent 8 }}
    {{- end }}
      terminationGracePeriodSeconds: {{ .Values.streamnative_console.gracePeriod }}
      {{- if not .Values.istio.enabled }}
      initContainers:
      # This init container will wait for broker to be ready before
      # deploying the pulsar manager
      - name: wait-broker-ready
        image: "{{ .Values.images.broker.repository }}:{{ .Values.images.broker.tag }}"
        imagePullPolicy: {{ .Values.images.broker.pullPolicy }}
        command: ["sh", "-c"]
        args:
          - >
            set -e; while [ "$(curl -s -o /dev/null -w '%{http_code}' {{ template "pulsar.proxy.web.service.url" . }}/status.html)" -ne "200" ]; do echo "pulsar cluster isn't initialized yet..."; sleep 5; done;
            echo "broker cluster is ready";
        {{- if .Values.streamnative_console.resources }}
        resources: {{- toYaml .Values.streamnative_console.resources | nindent 10 }}
        {{- end }}
      {{- end }}
      containers:
        - name: "{{ template "pulsar.fullname" . }}-{{ .Values.streamnative_console.component }}"
          image: "{{ .Values.images.streamnative_console.repository }}:{{ .Values.images.streamnative_console.tag }}"
          imagePullPolicy: {{ .Values.images.streamnative_console.pullPolicy }}
          {{- if .Values.streamnative_console.resources }}
          resources:
{{ toYaml .Values.streamnative_console.resources | indent 12 }}
          {{- end }}
          {{- if .Values.streamnative_console.probe.readiness.enabled }}
          readinessProbe:
            tcpSocket:
              port: 8850
            initialDelaySeconds: {{ .Values.streamnative_console.probe.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.streamnative_console.probe.readiness.periodSeconds }}
            failureThreshold: {{ .Values.streamnative_console.probe.readiness.failureThreshold }}
          {{- end }}
          {{- if .Values.streamnative_console.probe.liveness.enabled }}
          livenessProbe:
            tcpSocket:
              port: 8850
            initialDelaySeconds: {{ .Values.streamnative_console.probe.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.streamnative_console.probe.liveness.periodSeconds }}
            failureThreshold: {{ .Values.streamnative_console.probe.liveness.failureThreshold }}
          {{- end }}
          {{- if .Values.streamnative_console.probe.startup.enabled }}
          startupProbe:
            tcpSocket:
              port: 8850
            initialDelaySeconds: {{ .Values.streamnative_console.probe.startup.initialDelaySeconds }}
            periodSeconds: {{ .Values.streamnative_console.probe.startup.periodSeconds }}
            failureThreshold: {{ .Values.streamnative_console.probe.startup.failureThreshold }}
          {{- end }}
          env:
          - name: SPRING_CONFIGURATION_FILE
            value: /pulsar-manager/pulsar-manager/application.properties
          - name: DEFAULT_ORGANIZATION
            value: {{ .Values.streamnative_console.configData.DEFAULT_ORGANIZATION }}
          - name: DEFAULT_NAME
            value: {{ .Values.streamnative_console.configData.DEFAULT_NAME }}
          - name: INSTANCE_NAME
            value: {{ .Values.streamnative_console.configData.INSTANCE_NAME }}
          {{- if .Values.streamnative_console.configData.GLOBAL_RESOURCE_READ_ONLY }}
          - name: GLOBAL_RESOURCE_READ_ONLY
            value: "true"
          {{- end }}
          - name: CONNECTOR_ENABLED
            value: "{{ .Values.streamnative_console.configData.CONNECTOR_ENABLED | default "true" }}"
          - name: WEB_SERVICE_URL
            value: {{ template "pulsar.web.internal.service.url" . }}
          - name: KOP_SERVICE_URL
            value: {{ .Values.broker.advertisedDomain }}:9093
          {{- if .Values.streamnative_console.login.sso.google.enabled }}
          - name: GOOGLE_OAUTH2_ENABLED
            value: "true"
          - name: GOOGLE_REDIRECT_URI
            value: {{ .Values.streamnative_console.login.sso.google.config.GOOGLE_REDIRECT_URI }}
          - name: GOOGLE_RESTRICT_DOMAIN_SUFFIXES_NAME
            value: {{ .Values.streamnative_console.login.sso.google.config.GOOGLE_RESTRICT_DOMAIN_SUFFIXES_NAME }}
          {{- end }}
          {{- if .Values.streamnative_console.login.sso.azure.enabled }}
          - name: AZURE_OAUTH2_ENABLED
            value: "true"
          - name: AZURE_REDIRECT_URI
            value: {{ .Values.streamnative_console.login.sso.azure.config.AZURE_REDIRECT_URI }}
          - name: AZURE_RESTRICT_DOMAIN_SUFFIXES_NAME
            value: {{ .Values.streamnative_console.login.sso.azure.config.AZURE_RESTRICT_DOMAIN_SUFFIXES_NAME }}
          {{- end }}
          {{- if .Values.streamnative_console.login.sso.okta.enabled }}
          - name: OKTA_OAUTH2_ENABLED
            value: "true"
          - name: OKTA_REDIRECT_URI
            value: {{ .Values.streamnative_console.login.sso.okta.config.OKTA_REDIRECT_URI }}
          - name: OKTA_RESTRICT_DOMAIN_SUFFIXES_NAME
            value: {{ .Values.streamnative_console.login.sso.okta.config.OKTA_RESTRICT_DOMAIN_SUFFIXES_NAME }}
          - name: OKTA_DOMAIN
            value: {{ .Values.streamnative_console.login.sso.okta.config.OKTA_DOMAIN }}
          {{- end }}
          {{- if or (eq .Values.streamnative_console.login.sso.google.enabled true) (eq .Values.streamnative_console.login.sso.azure.enabled true) (eq .Values.streamnative_console.login.sso.okta.enabled true) }}
          - name: REDIRECT_SCHEME
            value: {{ .Values.streamnative_console.configData.REDIRECT_SCHEME }}
          - name: REDIRECT_HOST
            value: {{ .Values.streamnative_console.configData.REDIRECT_HOST }}
          - name: REDIRECT_PORT
            value: "{{ .Values.streamnative_console.configData.REDIRECT_PORT }}"
          {{- end }}
          - name: VAULT_ENABLED
            value: "false"
          {{- if .Values.streamnative_console.configData.GRAFANA_AUTH_PROXY }}
          - name: GRAFANA_AUTH_PROXY_USER
            value: {{ .Values.streamnative_console.configData.GRAFANA_AUTH_PROXY_USER | default "pulsar" }}
          - name: GRAFANA_TARGET_URL
            value: {{ .Values.streamnative_console.configData.GRAFANA_TARGET_URL | default (printf "http://%s-%s:3000" (include "pulsar.fullname" .) .Values.grafana.component) }}
          - name: GRAFANA_SERVLET_PATH
            value: {{ .Values.streamnative_console.configData.GRAFANA_SERVLET_PATH | default "/grafana/*" }}
          {{- end }}
          {{- if .Values.streamnative_console.configData.INIT_DEFAULT_ENVIRONMENT }}
          - name: DEFAULT_ENVIRONMENT_NAME
            value: "pulsar"
          - name: DEFAULT_ENVIRONMENT_SERVICE_URL
            value: "http://{{ template "pulsar.fullname" . }}-broker:8080"
          {{- end }}
          {{- if and .Values.streamnative_console.configData.BACKEND_DEFAULT_SUPER_USER_ROLE }}
          - name: BACKEND_DEFAULT_SUPER_USER_ROLE
            value: {{ .Values.streamnative_console.configData.BACKEND_DEFAULT_SUPER_USER_ROLE }}
          {{- end }}
          {{- if .Values.streamnative_console.login.sso.pulsarJwt.enabled }}
          - name: AUTHENTICATION_NAME
            value: "pulsar-jwt"
          - name: AUTHENTICATION_PROVIDER
            value: org.apache.pulsar.manager.authentication.PulsarJWTAuthenticationProvider
          - name: AUTHENTICATION_CUSTOM_CLAIM
            value: {{ .Values.streamnative_console.login.sso.pulsarJwt.config.AUTHENTICATION_CUSTOM_CLAIM | default "sub" }}
          - name: SERVICE_ACCOUNT_NAME
            value: jwt
          - name: SERVICE_ACCOUNT_PROVIDER
            value: org.apache.pulsar.manager.serviceAccount.JWTProvider
          - name: AUTH_METHOD_NAME
            value: pulsar-jwt
          - name: AUTH_METHOD_PROVIDER
            value: org.apache.pulsar.manager.authMethod.PulsarJWTAuthMethodProvider
          - name: AUTH_METHOD_CUSTOM_CLAIM
            value: {{ .Values.streamnative_console.login.sso.pulsarJwt.config.AUTHENTICATION_CUSTOM_CLAIM | default "sub" }}
          - name: USERNAME_CLAIM
            value: {{ .Values.streamnative_console.login.sso.pulsarJwt.config.USERNAME_CLAIM | default "sub" }}
          {{- if eq .Values.streamnative_console.login.sso.pulsarJwt.config.JWT_BROKER_TOKEN_MODE "PRIVATE" }}
          - name: JWT_BROKER_TOKEN_MODE
            value: PRIVATE
          - name: JWT_BROKER_PUBLIC_KEY_PATH
            value: /pulsar-manager/keys/token/public.key
          - name: JWT_BROKER_PRIVATE_KEY_PATH
            value: /pulsar-manager/keys/token/private.key
          {{- end }}
          {{- if eq .Values.streamnative_console.login.sso.pulsarJwt.config.JWT_BROKER_TOKEN_MODE "SECRET" }}
          - name: JWT_BROKER_TOKEN_MODE
            value: SECRET
          - name: JWT_BROKER_SECRET_KEY_PATH
            value: /pulsar-manager/keys/token/secret.key
          {{- end }}
          {{- end }}
          {{- if or .Values.streamnative_console.login.sso.google.enabled .Values.streamnative_console.login.sso.azure.enabled .Values.streamnative_console.login.sso.okta.enabled .Values.streamnative_console.login.sso.pulsarJwt.enabled }}
          envFrom:
          {{- end }}
          {{- if .Values.streamnative_console.login.sso.google.enabled }}
          - secretRef:
              name: "{{ template "pulsar.fullname" . }}-{{ .Values.streamnative_console.component }}-google-oauth2-secret"
          {{- end }}
          {{- if .Values.streamnative_console.login.sso.azure.enabled }}
          - secretRef:
              name: "{{ template "pulsar.fullname" . }}-{{ .Values.streamnative_console.component }}-azure-oauth2-secret"
          {{- end }}
          {{- if .Values.streamnative_console.login.sso.okta.enabled }}
          - secretRef:
              name: "{{ template "pulsar.fullname" . }}-{{ .Values.streamnative_console.component }}-okta-oauth2-secret"
          {{- end }}
          {{- if .Values.streamnative_console.login.sso.pulsarJwt.enabled }}
          - secretRef:
              name: {{ .Values.streamnative_console.login.sso.pulsarJwt.config.SERVICE_ACCOUNT_SUPER_TOKEN_SECRET }}
          {{- end }}
          volumeMounts:
          - name: streamnative-console-data
            mountPath: /data
          {{- if .Values.streamnative_console.login.sso.pulsarJwt.enabled }}
          - mountPath: /pulsar-manager/keys
            name: token-keys
            readOnly: true
          {{- end }}
        - name: "{{ template "pulsar.fullname" . }}-{{ .Values.streamnative_console.component }}-gateway"
          image: "{{ .Values.images.streamnative_console.repository }}:{{ .Values.images.streamnative_console.tag }}"
          imagePullPolicy: {{ .Values.images.streamnative_console.pullPolicy }}
          {{- if .Values.streamnative_console.resources }}
          resources:
{{ toYaml .Values.streamnative_console.resources | indent 12 }}
          {{- end }}
          workingDir: "/pulsar-manager/gateway"
          command: ["/pulsar-manager/gateway/gateway-entrypoint.sh"]
          env:
          - name: OPENAPI_ENABLED
            value: "{{ .Values.streamnative_console.configData.OPENAPI_ENABLED | default "false" }}"
          ports:
          - name: frontend
            containerPort: {{ .Values.streamnative_console.ports.frontend }}
          - name: backend
            containerPort: {{ .Values.streamnative_console.ports.backend }}
      volumes:
      {{- if not (and .Values.volumes.persistence .Values.streamnative_console.volumes.persistence) }}
      - name: streamnative-console-data
        emptyDir: {}
      {{- end }}
      {{- if and .Values.volumes.persistence .Values.streamnative_console.volumes.persistence }}
      {{- if not (or .Values.streamnative_console.volumes.data.storageClass .Values.streamnative_console.volumes.data.storageClassName) }}
      - name: streamnative-console-data
        persistentVolumeClaim:
          claimName: "{{ template "pulsar.streamnative_console.data.pvc.name" . }}"
      {{- end }}
      {{- end }}
      {{- if .Values.streamnative_console.login.sso.pulsarJwt.enabled }}
      - name: token-keys
        secret:
          defaultMode: 420
          items:
          {{- if eq .Values.streamnative_console.login.sso.pulsarJwt.config.JWT_BROKER_TOKEN_MODE "PRIVATE" }}
          - key: PUBLICKEY
            path: token/public.key
          - key: PRIVATEKEY
            path: token/private.key
          secretName: {{ .Values.streamnative_console.login.sso.pulsarJwt.config.JWT_BROKER_PUBLIC_PRIVATE_KEY }}
          {{- end }}
          {{- if eq .Values.streamnative_console.login.sso.pulsarJwt.config.JWT_BROKER_TOKEN_MODE "SECRET" }}
          - key: SECRETKEY
            path: token/secret.key
          secretName: {{ .Values.streamnative_console.login.sso.pulsarJwt.config.JWT_BROKER_SECRET_KEY }}
          {{- end }}
      {{- end }}
      {{- if .Values.streamnative_console.securityContext }}
      securityContext: {{- toYaml .Values.streamnative_console.securityContext | nindent 8 }}
      {{- end }}
      {{- if .Values.streamnative_console.serviceAccount.use }}
      serviceAccountName: {{ template "pulsar.streamnative_console.serviceAccount" . }}
      {{- end }}
  {{- if or .Values.streamnative_console.volumes.data.storageClass .Values.streamnative_console.volumes.data.storageClassName }}
  volumeClaimTemplates:
  - metadata:
      name: streamnative-console-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ .Values.streamnative_console.volumes.data.size }}
      {{- include "pulsar.streamnative_console.data.storage.class" . | nindent 6 }}
  {{- end }}
{{- end }}