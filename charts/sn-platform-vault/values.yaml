#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

## Namespace to deploy 
namespace: ""
stackName: pulsar
stackVersion: "1.0.0"

###
### Global Settings
###
metadataPrefix: ""

## Persistence
##
## If persistence is enabled, components that have state will
## be deployed with PersistentVolumeClaims, otherwise, for test
## purposes, they will be deployed with emptyDir
##
## This is a global setting that is applied to all components.
## If you need to disable persistence for a component,
## you can set the `volume.persistence` setting to `false` for
## that component.
volumes:
  persistence: true
  # configure the components to use local persistent volume
  # the local provisioner should be installed prior to enable local persistent volume
  local_storage: false

## AntiAffinity
##
## Flag to enable and disable `AntiAffinity` for all components.
## This is a global setting that is applied to all components.
## If you need to disable AntiAffinity for a component, you can set
## the `affinity.anti_affinity` settings to `false` for that component.
affinity:
  anti_affinity: true

## Images
##
## Control what images to use for each component
images:
  vault:
    repository: vault
    tag: "1.7.0"
    pullPolicy: "IfNotPresent"
  vault_init:
    repository: streamnative/pulsar_vault_init
    tag: "v1.0.2"
  bank_vaults:
    repository: banzaicloud/bank-vaults
    tag: "1.15.2"
    pullPolicy: "IfNotPresent"

monitoring:
  # monitoring - datadog
  datadog: false

datadog:
  component: datadog
  namespace: pulsar
  components:
    vault:
      enabled: true
      auth:
        enabled: false
        token: ""
        
auth:
  superUsers:
    # pulsar-admin client to broker/proxy communication
    client: "admin"
    
global:
  ## Reference to one or more secrets to be used when pulling images
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  imagePullSecrets: []

vault:
  component: "vault"
  # -- replicaCount indicates the number of vault pod
  replicaCount: 3
  serviceAccount:
    created: true
    name: ""
  oidcToken:
    # time to live for service-account and user
    ttl: 12h
  serviceType: "ClusterIP"
  tolerations: []
  nodeSelector: {}
  annotations: {}
  volumeClaimTemplates: []
  unsealConfig: {}
  volumeMounts:
    - name: vault-raft
      mountPath: /vault/file
      # use raft protocol for a vault cluster
  config:
    storage:
      raft:
        path: "/vault/file"
    listener:
      tcp:
        tls_disable: true
        address: "0.0.0.0:8200"
    api_addr: "http://${.Env.POD_NAME}:8200"
    cluster_addr: "http://${.Env.POD_NAME}:8201"
    ui: true
    telemetry:
      statsd_address: ""
    bankVaults:
      probe:
        readinessProbe: {}
        #  Note: To use readinessProbe, you can uncomment below configs
        #  If you want to use readinessProbe with Istio enabled, you have to change port from "api-port" to "http-api-port"
        #
        #  failureThreshold: 2
        #  httpGet:
        #    path: "/v1/sys/init"
        #    port: "api-port"
        #    scheme: "HTTP"
        startupProbe: {}
        livenessProbe: {}
  resources:
    limits:
      memory: "512Mi"
      cpu: "200m"
    requests:
      memory: "256Mi"
      cpu: "100m"
  volume:
    persistence: true
    name: "vault-volume"
    size: 10Gi
    local_storage: true
    # storageClassName: ""

istio:
  enabled: false
