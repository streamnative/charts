#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "{{ template "sn_console.fullname" . }}-{{ .Values.component }}"
  namespace: {{ template "sn_console.namespace" . }}
  labels:
    {{- include "sn_console.standardLabels" . | nindent 4 }}
    component: {{ .Values.component }}
spec:
  serviceName: "{{ template "sn_console.fullname" . }}-{{ .Values.component }}"
  replicas: 1
  selector:
    matchLabels:
      {{- include "sn_console.matchLabels" . | nindent 6 }}
      component: {{ .Values.component }}
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel

  template:
    metadata:
      labels:
        {{- include "sn_console.template.labels" . | nindent 8 }}
        component: {{ .Values.component }}
      annotations:
{{- with .Values.annotations }}
{{ toYaml . | indent 8 }}
{{- end }}
    spec:
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
      - name: {{ .Values.imagePullSecrets }}
      {{- end }}
    {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
    {{- end }}
    {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
    {{- end }}
      terminationGracePeriodSeconds: {{ .Values.gracePeriod }}
      containers:
        - name: "{{ template "sn_console.fullname" . }}-{{ .Values.component }}"
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.resources }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
          {{- end }}
          {{- if .Values.probe.readiness.enabled }}
          readinessProbe:
            tcpSocket:
              port: {{ .Values.ports.backend }}
            initialDelaySeconds: {{ .Values.probe.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.probe.readiness.periodSeconds }}
            failureThreshold: {{ .Values.probe.readiness.failureThreshold }}
          {{- end }}
          {{- if .Values.probe.liveness.enabled }}
          livenessProbe:
            tcpSocket:
              port: {{ .Values.ports.backend }}
            initialDelaySeconds: {{ .Values.probe.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.probe.liveness.periodSeconds }}
            failureThreshold: {{ .Values.probe.liveness.failureThreshold }}
          {{- end }}
          {{- if .Values.probe.startup.enabled }}
          startupProbe:
            tcpSocket:
              port: {{ .Values.ports.backend }}
            initialDelaySeconds: {{ .Values.probe.startup.initialDelaySeconds }}
            periodSeconds: {{ .Values.probe.startup.periodSeconds }}
            failureThreshold: {{ .Values.probe.startup.failureThreshold }}
          {{- end }}
          env:
          - name: SPRING_CONFIGURATION_FILE
            value: /pulsar-manager/pulsar-manager/application.properties
          - name: DEFAULT_ORGANIZATION
            value: {{ .Values.configData.DEFAULT_ORGANIZATION }}
          - name: DEFAULT_NAME
            value: {{ .Values.configData.DEFAULT_NAME }}
          - name: INSTANCE_NAME
            value: {{ .Values.configData.INSTANCE_NAME }}
          - name: WEB_SERVICE_URL
            value: {{ .Values.broker.webServiceUrl }}
          - name: KOP_SERVICE_URL
            value: {{ .Values.broker.kopServiceUrl }}
          {{- if .Values.configData.GLOBAL_RESOURCE_READ_ONLY }}
          - name: GLOBAL_RESOURCE_READ_ONLY
            value: "true"
          {{- end }}
          {{- if .Values.login.sso.google.enabled }}
          - name: GOOGLE_OAUTH2_ENABLED
            value: "true"
          - name: GOOGLE_REDIRECT_URI
            value: {{ .Values.login.sso.google.config.GOOGLE_REDIRECT_URI }}
          - name: GOOGLE_RESTRICT_DOMAIN_SUFFIXES_NAME
            value: {{ .Values.login.sso.google.config.GOOGLE_RESTRICT_DOMAIN_SUFFIXES_NAME }}
          {{- end }}
          {{- if .Values.login.sso.azure.enabled }}
          - name: AZURE_OAUTH2_ENABLED
            value: "true"
          - name: AZURE_REDIRECT_URI
            value: {{ .Values.login.sso.azure.config.AZURE_REDIRECT_URI }}
          - name: AZURE_RESTRICT_DOMAIN_SUFFIXES_NAME
            value: {{ .Values.login.sso.azure.config.AZURE_RESTRICT_DOMAIN_SUFFIXES_NAME }}
          {{- end }}
          {{- if .Values.login.sso.okta.enabled }}
          - name: OKTA_OAUTH2_ENABLED
            value: "true"
          - name: OKTA_REDIRECT_URI
            value: {{ .Values.login.sso.okta.config.OKTA_REDIRECT_URI }}
          - name: OKTA_RESTRICT_DOMAIN_SUFFIXES_NAME
            value: {{ .Values.login.sso.okta.config.OKTA_RESTRICT_DOMAIN_SUFFIXES_NAME }}
          - name: OKTA_DOMAIN
            value: {{ .Values.login.sso.okta.config.OKTA_DOMAIN }}
          {{- end }}
          {{- if or (eq .Values.login.sso.google.enabled true) (eq .Values.login.sso.azure.enabled true) (eq .Values.login.sso.okta.enabled true) }}
          - name: REDIRECT_SCHEME
            value: {{ .Values.configData.REDIRECT_SCHEME }}
          - name: REDIRECT_HOST
            value: {{ .Values.configData.REDIRECT_HOST }}
          - name: REDIRECT_PORT
            value: "{{ .Values.configData.REDIRECT_PORT }}"
          {{- end }}
          {{- if not .Values.login.vault.enabled }}
          - name: VAULT_ENABLED
            value: "false"
          {{ end }}
          {{- if .Values.configData.GRAFANA_AUTH_PROXY }}
          - name: GRAFANA_AUTH_PROXY_USER
            value: {{ .Values.configData.GRAFANA_AUTH_PROXY_USER | default "pulsar" }}
          - name: GRAFANA_TARGET_URL
            value: {{ .Values.configData.GRAFANA_TARGET_URL | default "http://localhost:3000" }}
          - name: GRAFANA_SERVLET_PATH
            value: {{ .Values.configData.GRAFANA_SERVLET_PATH | default "/grafana/*" }}
          {{- end }}
          {{- if and .Values.configData.DEFAULT_ENVIRONMENT_NAME .Values.configData.DEFAULT_ENVIRONMENT_SERVICE_URL }}
          - name: DEFAULT_ENVIRONMENT_NAME
            value: {{ .Values.configData.DEFAULT_ENVIRONMENT_NAME }}
          - name: DEFAULT_ENVIRONMENT_SERVICE_URL
            value: {{ .Values.configData.DEFAULT_ENVIRONMENT_SERVICE_URL }}
          {{- end }}
          {{- if and .Values.configData.BACKEND_DEFAULT_SUPER_USER_ROLE }}
          - name: BACKEND_DEFAULT_SUPER_USER_ROLE
            value: {{ .Values.configData.BACKEND_DEFAULT_SUPER_USER_ROLE }}
          {{- end }}
          - name: CONNECTOR_ENABLED
            value: "{{ .Values.configData.CONNECTOR_ENABLED | default "true" }}"
          {{- if .Values.login.pulsarJwt.enabled }}
          - name: AUTHENTICATION_NAME
            value: "pulsar-jwt"
          - name: AUTHENTICATION_PROVIDER
            value: org.apache.pulsar.manager.authentication.PulsarJWTAuthenticationProvider
          - name: AUTHENTICATION_CUSTOM_CLAIM
            value: {{ .Values.login.pulsarJwt.config.AUTHENTICATION_CUSTOM_CLAIM | default "sub" }}
          - name: SERVICE_ACCOUNT_NAME
            value: jwt
          - name: SERVICE_ACCOUNT_PROVIDER
            value: org.apache.pulsar.manager.serviceAccount.JWTProvider
          - name: AUTH_METHOD_NAME
            value: pulsar-jwt
          - name: AUTH_METHOD_PROVIDER
            value: org.apache.pulsar.manager.authMethod.PulsarJWTAuthMethodProvider
          - name: AUTH_METHOD_CUSTOM_CLAIM
            value: {{ .Values.login.pulsarJwt.config.AUTHENTICATION_CUSTOM_CLAIM | default "sub" }}
          - name: USERNAME_CLAIM
            value: {{ .Values.login.pulsarJwt.config.USERNAME_CLAIM | default "sub" }}
          {{- if eq .Values.login.pulsarJwt.config.JWT_BROKER_TOKEN_MODE "PRIVATE" }}
          - name: JWT_BROKER_TOKEN_MODE
            value: PRIVATE
          - name: JWT_BROKER_PUBLIC_KEY_PATH
            value: /pulsar-manager/keys/token/public.key
          - name: JWT_BROKER_PRIVATE_KEY_PATH
            value: /pulsar-manager/keys/token/private.key
          {{- end }}
          {{- if eq .Values.login.pulsarJwt.config.JWT_BROKER_TOKEN_MODE "SECRET" }}
          - name: JWT_BROKER_TOKEN_MODE
            value: SECRET
          - name: JWT_BROKER_SECRET_KEY_PATH
            value: /pulsar-manager/keys/token/secret.key
          {{- end }}
          {{- end }}
          {{- if or (eq .Values.login.vault.enabled true) (eq .Values.login.sso.google.enabled true) (eq .Values.login.sso.azure.enabled true) (eq .Values.login.sso.okta.enabled true) (eq .Values.login.pulsarJwt.enabled true) }}
          envFrom:
          {{- end }}
          {{- if .Values.login.vault.enabled }}
          - secretRef:
              name: {{ template "streamnative_console.vault-secret-key-name" . }}
          {{- end }}
          {{- if .Values.login.sso.google.enabled }}
          - secretRef:
              name: {{ .Values.login.sso.google.clientSecretRef }}
          {{- end }}
          {{- if .Values.login.sso.azure.enabled }}
          - secretRef:
              name: {{ .Values.login.sso.azure.clientSecretRef }}
          {{- end }}
          {{- if .Values.login.sso.okta.enabled }}
          - secretRef:
              name: {{ .Values.login.sso.okta.clientSecretRef }}
          {{- end }}
          {{- if .Values.login.pulsarJwt.enabled }}
          - secretRef:
              name: {{ .Values.login.pulsarJwt.config.SERVICE_ACCOUNT_SUPER_TOKEN_SECRET }}
          {{- end }}
          
          ports:
          - name: frontend
            containerPort: {{ .Values.ports.frontend }}
          - name: backend
            containerPort: {{ .Values.ports.backend }}

          volumeMounts:
          - name: streamnative-console-data
            mountPath: /data
          {{- if .Values.login.pulsarJwt.enabled }}
          - mountPath: /pulsar-manager/keys
            name: token-keys
            readOnly: true
          {{- end }}

      volumes:
      {{- if not .Values.volumes.persistence }}
      - name: streamnative-console-data
        emptyDir: {}
      {{- end }}
      {{- if .Values.volumes.persistence }}
      {{- if not (or .Values.volumes.data.storageClass .Values.volumes.data.storageClassName) }}
      - name: streamnative-console-data
        persistentVolumeClaim:
          claimName: "{{ template "streamnative_console.data.pvc.name" . }}"
      {{- end }}
      {{- end }}
      {{- if .Values.login.pulsarJwt.enabled }}
      - name: token-keys
        secret:
          defaultMode: 420
          items:
          {{- if eq .Values.login.pulsarJwt.config.JWT_BROKER_TOKEN_MODE "PRIVATE" }}
          - key: PUBLICKEY
            path: token/public.key
          - key: PRIVATEKEY
            path: token/private.key
          secretName: {{ .Values.login.pulsarJwt.config.JWT_BROKER_PUBLIC_PRIVATE_KEY }}
          {{- end }}
          {{- if eq .Values.login.pulsarJwt.config.JWT_BROKER_TOKEN_MODE "SECRET" }}
          - key: SECRETKEY
            path: token/secret.key
          secretName: {{ .Values.login.pulsarJwt.config.JWT_BROKER_SECRET_KEY }}
          {{- end }}
      {{- end }}

  {{- if or .Values.volumes.data.storageClass .Values.volumes.data.storageClassName }}
  volumeClaimTemplates:
  - metadata:
      name: streamnative-console-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ .Values.volumes.data.size }}
      {{- include "streamnative_console.data.storage.class" . | nindent 6 }}
  {{- end }}