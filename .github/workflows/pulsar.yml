#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

name: Precommit - Pulsar Helm Chart
on:
  pull_request:
    branches:
      - '*'
    paths:
      - 'charts/local-storage-provisioner/**'
      - 'charts/pulsar/**'
      - '.github/workflows/pulsar**'
jobs:
  lint-test-basic:
    name: Basic Installation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Fetch history
        run: git fetch --prune --unshallow

      - name: Lint chart
        id: lint
        uses: helm/chart-testing-action@v1.0.0
        with:
          command: lint

      - name: Install chart
        run: |
          .ci/chart_test.sh .ci/clusters/values-local-pv.yaml
        # Only build a kind cluster if there are chart changes to test.
        if: steps.lint.outputs.changed == 'true'

      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: failure()

  lint-test-zk-tls:
    name: ZK TLS Only
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Fetch history
        run: git fetch --prune --unshallow

      - name: Run chart-testing (lint)
        id: lint
        uses: helm/chart-testing-action@v1.0.0
        with:
          command: lint

      - name: Run chart-testing (install)
        run: |
          .ci/chart_test.sh .ci/clusters/values-zk-tls.yaml
        # Only build a kind cluster if there are chart changes to test.
        if: steps.lint.outputs.changed == 'true'

  lint-test-bk-tls:
    name:  BK TLS Only
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Fetch history
        run: git fetch --prune --unshallow

      - name: Run chart-testing (lint)
        id: lint
        uses: helm/chart-testing-action@v1.0.0
        with:
          command: lint

      - name: Run chart-testing (install)
        run: |
          .ci/chart_test.sh .ci/clusters/values-bk-tls.yaml
        # Only build a kind cluster if there are chart changes to test.
        if: steps.lint.outputs.changed == 'true'

  lint-test-zkbk-tls:
    name: ZK & BK TLS Only
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Fetch history
        run: git fetch --prune --unshallow

      - name: Run chart-testing (lint)
        id: lint
        uses: helm/chart-testing-action@v1.0.0
        with:
          command: lint

      - name: Run chart-testing (install)
        run: |
          .ci/chart_test.sh .ci/clusters/values-zkbk-tls.yaml
        # Only build a kind cluster if there are chart changes to test.
        if: steps.lint.outputs.changed == 'true'

  lint-test-tls:
    name: TLS Installation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Fetch history
        run: git fetch --prune --unshallow

      - name: Run chart-testing (lint)
        id: lint
        uses: helm/chart-testing-action@v1.0.0
        with:
          command: lint

      - name: Run chart-testing (install)
        run: |
          .ci/chart_test.sh .ci/clusters/values-tls.yaml
        # Only build a kind cluster if there are chart changes to test.
        if: steps.lint.outputs.changed == 'true'

  lint-test-broker-tls:
    name: Broker & Proxy TLS Installation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Fetch history
        run: git fetch --prune --unshallow

      - name: Run chart-testing (lint)
        id: lint
        uses: helm/chart-testing-action@v1.0.0
        with:
          command: lint

      - name: Run chart-testing (install)
        run: |
          .ci/chart_test.sh .ci/clusters/values-broker-tls.yaml
        # Only build a kind cluster if there are chart changes to test.
        if: steps.lint.outputs.changed == 'true'

  lint-test-broker-ip:
    name: Advertise Broker IP Address
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Fetch history
        run: git fetch --prune --unshallow

      - name: Lint chart
        id: lint
        uses: helm/chart-testing-action@v1.0.0
        with:
          command: lint

      - name: Install chart
        run: |
          .ci/chart_test.sh .ci/clusters/values-broker-ip.yaml
        # Only build a kind cluster if there are chart changes to test.
        if: steps.lint.outputs.changed == 'true'

  lint-test-jwt-asymmetric:
    name: JWT Secret Key Installation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Fetch history
        run: git fetch --prune --unshallow

      - name: Run chart-testing (lint)
        id: lint
        uses: helm/chart-testing-action@v1.0.0
        with:
          command: lint

      - name: Run chart-testing (install)
        run: |
          .ci/chart_test.sh .ci/clusters/values-jwt-asymmetric.yaml
        env:
          SYMMETRIC: "false"
        # Only build a kind cluster if there are chart changes to test.
        if: steps.lint.outputs.changed == 'true'

  lint-test-jwt-symmetric:
    name: JWT Public/Private Key Installation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Fetch history
        run: git fetch --prune --unshallow

      - name: Run chart-testing (lint)
        id: lint
        uses: helm/chart-testing-action@v1.0.0
        with:
          command: lint

      - name: Run chart-testing (install)
        run: |
          .ci/chart_test.sh .ci/clusters/values-jwt-symmetric.yaml
        env:
          SYMMETRIC: "true"
        # Only build a kind cluster if there are chart changes to test.
        if: steps.lint.outputs.changed == 'true'

  lint-test-function:
    name: Pulsar Function
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Fetch history
        run: git fetch --prune --unshallow

      - name: Lint chart
        id: lint
        uses: helm/chart-testing-action@v1.0.0
        with:
          command: lint

      - name: Install chart
        run: |
          .ci/chart_test.sh .ci/clusters/values-function.yaml
        env:
          FUNCTION: "true"
        # Only build a kind cluster if there are chart changes to test.
        if: steps.lint.outputs.changed == 'true'

  lint-test-sa-disabled:
    name: Service Account Disabled
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Fetch history
        run: git fetch --prune --unshallow

      - name: Run chart-testing (lint)
        id: lint
        uses: helm/chart-testing-action@v1.0.0
        with:
          command: lint

      - name: Run chart-testing (install)
        run: |
          .ci/chart_test.sh .ci/clusters/values-sa-disabled.yaml
        # Only build a kind cluster if there are chart changes to test.
        if: steps.lint.outputs.changed == 'true'

  lint-test-service-account:
    name: Service Account
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Fetch history
        run: git fetch --prune --unshallow

      - name: Run chart-testing (lint)
        id: lint
        uses: helm/chart-testing-action@v1.0.0
        with:
          command: lint

      - name: Run chart-testing (install)
        run: |
          .ci/chart_test.sh .ci/clusters/values-service-account.yaml
        # Only build a kind cluster if there are chart changes to test.
        if: steps.lint.outputs.changed == 'true'

  lint-test-pulsar-image:
    name: Use Pulsar Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Fetch history
        run: git fetch --prune --unshallow

      - name: Lint chart
        id: lint
        uses: helm/chart-testing-action@v1.0.0
        with:
          command: lint

      - name: Install chart
        run: |
          .ci/chart_test.sh .ci/clusters/values-pulsar-image.yaml
        # Only build a kind cluster if there are chart changes to test.
        if: steps.lint.outputs.changed == 'true'

  lint-test-sn-image:
    name: Use SN Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Fetch history
        run: git fetch --prune --unshallow

      - name: Lint chart
        id: lint
        uses: helm/chart-testing-action@v1.0.0
        with:
          command: lint

      - name: Install chart
        run: |
          .ci/chart_test.sh .ci/clusters/values-sn-image.yaml
        # Only build a kind cluster if there are chart changes to test.
        if: steps.lint.outputs.changed == 'true'
