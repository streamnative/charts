#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

name: Chart Test
on:
  pull_request:
    branches:
      - '*'
    paths:
      - 'charts/sn-platform'
      - 'charts/sn-platform-slim'
      - 'charts/pulsar-operator'
      - '.github/workflows/**'
      - '.ci/ct.yaml'

jobs:
  basic-tests:
    runs-on: ubuntu-latest
    outputs:
      changed: ${{ steps.list-changed.outputs.changed }}
      chart_name: ${{ steps.list-changed.outputs.chart_name }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.12.1

      - uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.4.0

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --config .ci/ct.yaml)
          chart_name=$(ct list-changed  --config .ci/ct.yaml | grep -v '>>>')
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "chart_name=$chart_name" >> $GITHUB_OUTPUT
          fi

      - name: Run chart-testing (lint)
        if: steps.list-changed.outputs.changed == 'true'
        run: ct lint --target-branch ${{ github.event.repository.default_branch }} --config .ci/ct.yaml

      - name: Run template test
        if: steps.list-changed.outputs.changed == 'true'
        run: |
          for i in v1.20.0 v1.21.0 v1.22.0 v1.23.0 v1.24.0 v1.25.0 v1.26.0 v1.27.0
          do
            helm template test ${{ steps.list-changed.outputs.chart_name }} --kube-version $i> $i.yaml
            yamllint $i.yaml --config-file lintconf.yaml
          done

      - name: Run unittest
        if: steps.list-changed.outputs.changed == 'true'
        run: |
          helm plugin install https://github.com/quintush/helm-unittest
          helm unittest ${{ steps.list-changed.outputs.chart_name }}

  install-on-v1-20:
    runs-on: ubuntu-latest
    needs: basic-tests
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: clean disk
        run: |
          df -h
          sudo swapoff -a
          sudo rm -rf /swapfile /usr/share/dotnet /usr/local/lib/android /opt/ghc "$AGENT_TOOLSDIRECTORY"
          sudo apt clean
          docker rmi $(docker images -q) -f
          df -h

      - name: Set up Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.12.1

      - uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.4.0

      - name: Create kind cluster
        run: |
          ./hack/kind-cluster-build.sh --nodeNum 3 --k8sVersion v1.20.15
          docker pull "$SN_IMAGE"
          kind load docker-image --name pulsar-dev --nodes pulsar-dev-worker "$SN_IMAGE"

        env:
          KIND_VERSION: 0.20.0
          SN_IMAGE: streamnative/sn-platform:2.10.4.3
        if: ${{ needs.basic-tests.outputs.changed }} == 'true'


      # Install the pulsar operator before testing the sn-platform
      - name: Install the pulsar operator
        if: ${{ needs.basic-tests.outputs.changed }} == 'true' && ${{ needs.basic-tests.outputs.chart_name}} != 'charts/pulsar-operator'
        run: |
          helm repo add banzaicloud-stable https://kubernetes-charts.banzaicloud.com
          helm -n sn-system install sn charts/pulsar-operator --create-namespace
          kubectl -n sn-system get deploy
          kubectl -n sn-system wait --for condition=available --timeout=360s deployment/sn-pulsar-operator-pulsar-controller-manager
          kubectl -n sn-system wait --for condition=available --timeout=360s deployment/sn-pulsar-operator-zookeeper-controller-manager
          kubectl -n sn-system wait --for condition=available --timeout=360s deployment/sn-pulsar-operator-bookkeeper-controller-manager
          helm -n sn-system upgrade --install vault-operator banzaicloud-stable/vault-operator
          kubectl -nsn-system wait --for condition=available --timeout=360s deployment/vault-operator
          df -h

      - name: Run chart-testing (install)
        run: ct install --debug --config ct.yaml --print-config --charts ${{ needs.basic-tests.outputs.chart_name }}

      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        timeout-minutes: 10
        if: failure()

  install-on-v1-21:
    runs-on: ubuntu-latest
    needs: basic-tests
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: clean disk
        run: |
          df -h
          sudo swapoff -a
          sudo rm -rf /swapfile /usr/share/dotnet /usr/local/lib/android /opt/ghc "$AGENT_TOOLSDIRECTORY"
          sudo apt clean
          docker rmi $(docker images -q) -f
          df -h

      - name: Set up Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.12.1

      - uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.4.0

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed  --config .ci/ct.yaml)
          chart_name=$(ct list-changed  --config .ci/ct.yaml | grep -v '>>>')
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "chart_name=$chart_name" >> $GITHUB_OUTPUT
          fi

      - name: Create kind cluster
        run: |
          ./hack/kind-cluster-build.sh --nodeNum 3 --k8sVersion v1.21.14
          docker pull "$SN_IMAGE"
          kind load docker-image --name pulsar-dev --nodes pulsar-dev-worker "$SN_IMAGE"

        env:
          KIND_VERSION: 0.20.0
          SN_IMAGE: streamnative/sn-platform:2.10.4.3
        if: steps.list-changed.outputs.changed == 'true'


      # Install the pulsar operator before testing the sn-platform
      - name: Install the pulsar operator
        if: steps.list-changed.outputs.changed == 'true' && steps.list-changed.outputs.chart_name != 'charts/pulsar-operator'
        run: |
          helm repo add banzaicloud-stable https://kubernetes-charts.banzaicloud.com
          helm -n sn-system install sn charts/pulsar-operator --create-namespace
          kubectl -n sn-system get deploy
          kubectl -n sn-system wait --for condition=available --timeout=360s deployment/sn-pulsar-operator-pulsar-controller-manager
          kubectl -n sn-system wait --for condition=available --timeout=360s deployment/sn-pulsar-operator-zookeeper-controller-manager
          kubectl -n sn-system wait --for condition=available --timeout=360s deployment/sn-pulsar-operator-bookkeeper-controller-manager
          helm -n sn-system upgrade --install vault-operator banzaicloud-stable/vault-operator
          kubectl -nsn-system wait --for condition=available --timeout=360s deployment/vault-operator
          df -h

      - name: Run chart-testing (install)
        run: ct install --debug --config ct.yaml --print-config --charts {{ steps.list-changed.outputs.chart_name }}

      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        timeout-minutes: 10
        if: failure()

  install-on-v1-22:
    runs-on: ubuntu-latest
    needs: basic-tests
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: clean disk
        run: |
          df -h
          sudo swapoff -a
          sudo rm -rf /swapfile /usr/share/dotnet /usr/local/lib/android /opt/ghc "$AGENT_TOOLSDIRECTORY"
          sudo apt clean
          docker rmi $(docker images -q) -f
          df -h

      - name: Set up Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.12.1

      - uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.4.0

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed  --config .ci/ct.yaml)
          chart_name=$(ct list-changed  --config .ci/ct.yaml | grep -v '>>>')
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "chart_name=$chart_name" >> $GITHUB_OUTPUT
          fi

      - name: Create kind cluster
        run: |
          ./hack/kind-cluster-build.sh --nodeNum 3 --k8sVersion v1.22.17
          docker pull "$SN_IMAGE"
          kind load docker-image --name pulsar-dev --nodes pulsar-dev-worker "$SN_IMAGE"

        env:
          KIND_VERSION: 0.20.0
          SN_IMAGE: streamnative/sn-platform:2.10.4.3
        if: steps.list-changed.outputs.changed == 'true'


      # Install the pulsar operator before testing the sn-platform
      - name: Install the pulsar operator
        if: steps.list-changed.outputs.changed == 'true' && steps.list-changed.outputs.chart_name != 'charts/pulsar-operator'
        run: |
          helm repo add banzaicloud-stable https://kubernetes-charts.banzaicloud.com
          helm -n sn-system install sn charts/pulsar-operator --create-namespace
          kubectl -n sn-system get deploy
          kubectl -n sn-system wait --for condition=available --timeout=360s deployment/sn-pulsar-operator-pulsar-controller-manager
          kubectl -n sn-system wait --for condition=available --timeout=360s deployment/sn-pulsar-operator-zookeeper-controller-manager
          kubectl -n sn-system wait --for condition=available --timeout=360s deployment/sn-pulsar-operator-bookkeeper-controller-manager
          helm -n sn-system upgrade --install vault-operator banzaicloud-stable/vault-operator
          kubectl -nsn-system wait --for condition=available --timeout=360s deployment/vault-operator
          df -h

      - name: Run chart-testing (install)
        run: ct install --debug --config ct.yaml --print-config --charts {{ steps.list-changed.outputs.chart_name }}

      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        timeout-minutes: 10
        if: failure()

  install-on-v1-23:
    runs-on: ubuntu-latest
    needs: basic-tests
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: clean disk
        run: |
          df -h
          sudo swapoff -a
          sudo rm -rf /swapfile /usr/share/dotnet /usr/local/lib/android /opt/ghc "$AGENT_TOOLSDIRECTORY"
          sudo apt clean
          docker rmi $(docker images -q) -f
          df -h

      - name: Set up Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.12.1

      - uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.4.0

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed  --config .ci/ct.yaml)
          chart_name=$(ct list-changed  --config .ci/ct.yaml | grep -v '>>>')
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "chart_name=$chart_name" >> $GITHUB_OUTPUT
          fi

      - name: Create kind cluster
        run: |
          ./hack/kind-cluster-build.sh --nodeNum 3 --k8sVersion v1.23.17
          docker pull "$SN_IMAGE"
          kind load docker-image --name pulsar-dev --nodes pulsar-dev-worker "$SN_IMAGE"

        env:
          KIND_VERSION: 0.20.0
          SN_IMAGE: streamnative/sn-platform:2.10.4.3
        if: steps.list-changed.outputs.changed == 'true'


      # Install the pulsar operator before testing the sn-platform
      - name: Install the pulsar operator
        if: steps.list-changed.outputs.changed == 'true' && steps.list-changed.outputs.chart_name != 'charts/pulsar-operator'
        run: |
          helm repo add banzaicloud-stable https://kubernetes-charts.banzaicloud.com
          helm -n sn-system install sn charts/pulsar-operator --create-namespace
          kubectl -n sn-system get deploy
          kubectl -n sn-system wait --for condition=available --timeout=360s deployment/sn-pulsar-operator-pulsar-controller-manager
          kubectl -n sn-system wait --for condition=available --timeout=360s deployment/sn-pulsar-operator-zookeeper-controller-manager
          kubectl -n sn-system wait --for condition=available --timeout=360s deployment/sn-pulsar-operator-bookkeeper-controller-manager
          helm -n sn-system upgrade --install vault-operator banzaicloud-stable/vault-operator
          kubectl -nsn-system wait --for condition=available --timeout=360s deployment/vault-operator
          df -h

      - name: Run chart-testing (install)
        run: ct install --debug --config ct.yaml --print-config --charts {{ steps.list-changed.outputs.chart_name }}

      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        timeout-minutes: 10
        if: failure()
      
  install-on-v1-24:
    runs-on: ubuntu-latest
    needs: basic-tests
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: clean disk
        run: |
          df -h
          sudo swapoff -a
          sudo rm -rf /swapfile /usr/share/dotnet /usr/local/lib/android /opt/ghc "$AGENT_TOOLSDIRECTORY"
          sudo apt clean
          docker rmi $(docker images -q) -f
          df -h

      - name: Set up Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.12.1

      - uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.4.0

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed  --config .ci/ct.yaml)
          chart_name=$(ct list-changed  --config .ci/ct.yaml | grep -v '>>>')
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "chart_name=$chart_name" >> $GITHUB_OUTPUT
          fi

      - name: Create kind cluster
        run: |
          ./hack/kind-cluster-build.sh --nodeNum 3 --k8sVersion v1.24.15
          docker pull "$SN_IMAGE"
          kind load docker-image --name pulsar-dev --nodes pulsar-dev-worker "$SN_IMAGE"

        env:
          KIND_VERSION: 0.20.0
          SN_IMAGE: streamnative/sn-platform:2.10.4.3
        if: steps.list-changed.outputs.changed == 'true'


      # Install the pulsar operator before testing the sn-platform
      - name: Install the pulsar operator
        if: steps.list-changed.outputs.changed == 'true' && steps.list-changed.outputs.chart_name != 'charts/pulsar-operator'
        run: |
          helm repo add banzaicloud-stable https://kubernetes-charts.banzaicloud.com
          helm -n sn-system install sn charts/pulsar-operator --create-namespace
          kubectl -n sn-system get deploy
          kubectl -n sn-system wait --for condition=available --timeout=360s deployment/sn-pulsar-operator-pulsar-controller-manager
          kubectl -n sn-system wait --for condition=available --timeout=360s deployment/sn-pulsar-operator-zookeeper-controller-manager
          kubectl -n sn-system wait --for condition=available --timeout=360s deployment/sn-pulsar-operator-bookkeeper-controller-manager
          helm -n sn-system upgrade --install vault-operator banzaicloud-stable/vault-operator
          kubectl -nsn-system wait --for condition=available --timeout=360s deployment/vault-operator
          df -h

      - name: Run chart-testing (install)
        run: ct install --debug --config ct.yaml --print-config --charts {{ steps.list-changed.outputs.chart_name }}

      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        timeout-minutes: 10
        if: failure()


  install-on-v1-25:
    runs-on: ubuntu-latest
    needs: basic-tests
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: clean disk
        run: |
          df -h
          sudo swapoff -a
          sudo rm -rf /swapfile /usr/share/dotnet /usr/local/lib/android /opt/ghc "$AGENT_TOOLSDIRECTORY"
          sudo apt clean
          docker rmi $(docker images -q) -f
          df -h

      - name: Set up Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.12.1

      - uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.4.0

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed  --config .ci/ct.yaml)
          chart_name=$(ct list-changed  --config .ci/ct.yaml | grep -v '>>>')
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "chart_name=$chart_name" >> $GITHUB_OUTPUT
          fi

      - name: Create kind cluster
        run: |
          ./hack/kind-cluster-build.sh --nodeNum 3 --k8sVersion v1.25.11
          docker pull "$SN_IMAGE"
          kind load docker-image --name pulsar-dev --nodes pulsar-dev-worker "$SN_IMAGE"

        env:
          KIND_VERSION: 0.20.0
          SN_IMAGE: streamnative/sn-platform:2.10.4.3
        if: steps.list-changed.outputs.changed == 'true'


      # Install the pulsar operator before testing the sn-platform
      - name: Install the pulsar operator
        if: steps.list-changed.outputs.changed == 'true' && steps.list-changed.outputs.chart_name != 'charts/pulsar-operator'
        run: |
          helm repo add banzaicloud-stable https://kubernetes-charts.banzaicloud.com
          helm -n sn-system install sn charts/pulsar-operator --create-namespace
          kubectl -n sn-system get deploy
          kubectl -n sn-system wait --for condition=available --timeout=360s deployment/sn-pulsar-operator-pulsar-controller-manager
          kubectl -n sn-system wait --for condition=available --timeout=360s deployment/sn-pulsar-operator-zookeeper-controller-manager
          kubectl -n sn-system wait --for condition=available --timeout=360s deployment/sn-pulsar-operator-bookkeeper-controller-manager
          helm -n sn-system upgrade --install vault-operator banzaicloud-stable/vault-operator
          kubectl -nsn-system wait --for condition=available --timeout=360s deployment/vault-operator
          df -h

      - name: Run chart-testing (install)
        run: ct install --debug --config ct.yaml --print-config --charts {{ steps.list-changed.outputs.chart_name }}

      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        timeout-minutes: 10
        if: failure()


  install-on-v1-26:
    runs-on: ubuntu-latest
    needs: basic-tests
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: clean disk
        run: |
          df -h
          sudo swapoff -a
          sudo rm -rf /swapfile /usr/share/dotnet /usr/local/lib/android /opt/ghc "$AGENT_TOOLSDIRECTORY"
          sudo apt clean
          docker rmi $(docker images -q) -f
          df -h

      - name: Set up Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.12.1

      - uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.4.0

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed  --config .ci/ct.yaml)
          chart_name=$(ct list-changed  --config .ci/ct.yaml | grep -v '>>>')
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "chart_name=$chart_name" >> $GITHUB_OUTPUT
          fi

      - name: Create kind cluster
        run: |
          ./hack/kind-cluster-build.sh --nodeNum 3 --k8sVersion v1.26.6
          docker pull "$SN_IMAGE"
          kind load docker-image --name pulsar-dev --nodes pulsar-dev-worker "$SN_IMAGE"

        env:
          KIND_VERSION: 0.20.0
          SN_IMAGE: streamnative/sn-platform:2.10.4.3
        if: steps.list-changed.outputs.changed == 'true'


      # Install the pulsar operator before testing the sn-platform
      - name: Install the pulsar operator
        if: steps.list-changed.outputs.changed == 'true' && steps.list-changed.outputs.chart_name != 'charts/pulsar-operator'
        run: |
          helm repo add banzaicloud-stable https://kubernetes-charts.banzaicloud.com
          helm -n sn-system install sn charts/pulsar-operator --create-namespace
          kubectl -n sn-system get deploy
          kubectl -n sn-system wait --for condition=available --timeout=360s deployment/sn-pulsar-operator-pulsar-controller-manager
          kubectl -n sn-system wait --for condition=available --timeout=360s deployment/sn-pulsar-operator-zookeeper-controller-manager
          kubectl -n sn-system wait --for condition=available --timeout=360s deployment/sn-pulsar-operator-bookkeeper-controller-manager
          helm -n sn-system upgrade --install vault-operator banzaicloud-stable/vault-operator
          kubectl -nsn-system wait --for condition=available --timeout=360s deployment/vault-operator
          df -h

      - name: Run chart-testing (install)
        run: ct install --debug --config ct.yaml --print-config --charts {{ steps.list-changed.outputs.chart_name }}

      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        timeout-minutes: 10
        if: failure()


  install-on-v1-27:
    runs-on: ubuntu-latest
    needs: basic-tests
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: clean disk
        run: |
          df -h
          sudo swapoff -a
          sudo rm -rf /swapfile /usr/share/dotnet /usr/local/lib/android /opt/ghc "$AGENT_TOOLSDIRECTORY"
          sudo apt clean
          docker rmi $(docker images -q) -f
          df -h

      - name: Set up Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.12.1

      - uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.4.0

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed  --config .ci/ct.yaml)
          chart_name=$(ct list-changed  --config .ci/ct.yaml | grep -v '>>>')
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "chart_name=$chart_name" >> $GITHUB_OUTPUT
          fi

      - name: Create kind cluster
        run: |
          ./hack/kind-cluster-build.sh --nodeNum 3 --k8sVersion v1.27.3
          docker pull "$SN_IMAGE"
          kind load docker-image --name pulsar-dev --nodes pulsar-dev-worker "$SN_IMAGE"

        env:
          KIND_VERSION: 0.20.0
          SN_IMAGE: streamnative/sn-platform:2.10.4.3
        if: steps.list-changed.outputs.changed == 'true'


      # Install the pulsar operator before testing the sn-platform
      - name: Install the pulsar operator
        if: steps.list-changed.outputs.changed == 'true' && steps.list-changed.outputs.chart_name != 'charts/pulsar-operator'
        run: |
          helm repo add banzaicloud-stable https://kubernetes-charts.banzaicloud.com
          helm -n sn-system install sn charts/pulsar-operator --create-namespace
          kubectl -n sn-system get deploy
          kubectl -n sn-system wait --for condition=available --timeout=360s deployment/sn-pulsar-operator-pulsar-controller-manager
          kubectl -n sn-system wait --for condition=available --timeout=360s deployment/sn-pulsar-operator-zookeeper-controller-manager
          kubectl -n sn-system wait --for condition=available --timeout=360s deployment/sn-pulsar-operator-bookkeeper-controller-manager
          helm -n sn-system upgrade --install vault-operator banzaicloud-stable/vault-operator
          kubectl -nsn-system wait --for condition=available --timeout=360s deployment/vault-operator
          df -h

      - name: Run chart-testing (install)
        run: ct install --debug --config ct.yaml --print-config --charts {{ steps.list-changed.outputs.chart_name }}

      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        timeout-minutes: 10
        if: failure()